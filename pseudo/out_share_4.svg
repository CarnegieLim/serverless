<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="630.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="613" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="613" > </text>
<g id="frames">
<g >
<title>perf_iterate_ctx (5 samples, 1.36%)</title><rect x="519.8" y="373" width="16.1" height="15.0" fill="rgb(244,217,34)" rx="2" ry="2" />
<text  x="522.84" y="383.5" ></text>
</g>
<g >
<title>get_page_from_freelist (5 samples, 1.36%)</title><rect x="471.7" y="277" width="16.1" height="15.0" fill="rgb(239,184,8)" rx="2" ry="2" />
<text  x="474.74" y="287.5" ></text>
</g>
<g >
<title>___slab_alloc (7 samples, 1.90%)</title><rect x="465.3" y="373" width="22.5" height="15.0" fill="rgb(246,59,40)" rx="2" ry="2" />
<text  x="468.33" y="383.5" >_..</text>
</g>
<g >
<title>__clone (280 samples, 76.09%)</title><rect x="240.9" y="533" width="897.8" height="15.0" fill="rgb(248,8,31)" rx="2" ry="2" />
<text  x="243.87" y="543.5" >__clone</text>
</g>
<g >
<title>dl_main (1 samples, 0.27%)</title><rect x="10.0" y="517" width="3.2" height="15.0" fill="rgb(227,37,24)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>alloc_pages_current (10 samples, 2.72%)</title><rect x="410.8" y="389" width="32.1" height="15.0" fill="rgb(242,132,24)" rx="2" ry="2" />
<text  x="413.82" y="399.5" >al..</text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.54%)</title><rect x="558.3" y="389" width="6.4" height="15.0" fill="rgb(205,10,21)" rx="2" ry="2" />
<text  x="561.32" y="399.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (1 samples, 0.27%)</title><rect x="1186.8" y="325" width="3.2" height="15.0" fill="rgb(216,115,21)" rx="2" ry="2" />
<text  x="1189.79" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.27%)</title><rect x="449.3" y="389" width="3.2" height="15.0" fill="rgb(211,23,47)" rx="2" ry="2" />
<text  x="452.29" y="399.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.27%)</title><rect x="327.4" y="341" width="3.3" height="15.0" fill="rgb(238,97,4)" rx="2" ry="2" />
<text  x="330.45" y="351.5" ></text>
</g>
<g >
<title>radix_tree_node_rcu_free (1 samples, 0.27%)</title><rect x="327.4" y="277" width="3.3" height="15.0" fill="rgb(226,1,48)" rx="2" ry="2" />
<text  x="330.45" y="287.5" ></text>
</g>
<g >
<title>wait_task_zombie (13 samples, 3.53%)</title><rect x="199.2" y="405" width="41.7" height="15.0" fill="rgb(224,48,33)" rx="2" ry="2" />
<text  x="202.18" y="415.5" >wai..</text>
</g>
<g >
<title>_int_malloc (1 samples, 0.27%)</title><rect x="1148.3" y="549" width="3.2" height="15.0" fill="rgb(207,65,26)" rx="2" ry="2" />
<text  x="1151.32" y="559.5" ></text>
</g>
<g >
<title>apparmor_file_mprotect (1 samples, 0.27%)</title><rect x="10.0" y="405" width="3.2" height="15.0" fill="rgb(220,11,6)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>__perf_event__output_id_sample (2 samples, 0.54%)</title><rect x="526.2" y="341" width="6.5" height="15.0" fill="rgb(210,86,33)" rx="2" ry="2" />
<text  x="529.25" y="351.5" ></text>
</g>
<g >
<title>__libc_start_main (352 samples, 95.65%)</title><rect x="19.6" y="549" width="1128.7" height="15.0" fill="rgb(230,191,43)" rx="2" ry="2" />
<text  x="22.62" y="559.5" >__libc_start_main</text>
</g>
<g >
<title>alloc_slab_page (7 samples, 1.90%)</title><rect x="465.3" y="325" width="22.5" height="15.0" fill="rgb(233,219,20)" rx="2" ry="2" />
<text  x="468.33" y="335.5" >a..</text>
</g>
<g >
<title>__vdso_clock_gettime (10 samples, 2.72%)</title><rect x="1151.5" y="533" width="32.1" height="15.0" fill="rgb(227,208,44)" rx="2" ry="2" />
<text  x="1154.52" y="543.5" >__..</text>
</g>
<g >
<title>finish_task_switch (51 samples, 13.86%)</title><rect x="35.7" y="389" width="163.5" height="15.0" fill="rgb(244,177,1)" rx="2" ry="2" />
<text  x="38.65" y="399.5" >finish_task_switch</text>
</g>
<g >
<title>alloc_pages_current (5 samples, 1.36%)</title><rect x="471.7" y="309" width="16.1" height="15.0" fill="rgb(225,75,3)" rx="2" ry="2" />
<text  x="474.74" y="319.5" ></text>
</g>
<g >
<title>security_prepare_creds (1 samples, 0.27%)</title><rect x="317.8" y="389" width="3.2" height="15.0" fill="rgb(217,210,43)" rx="2" ry="2" />
<text  x="320.83" y="399.5" ></text>
</g>
<g >
<title>perf_event_pid_type (1 samples, 0.27%)</title><rect x="1186.8" y="341" width="3.2" height="15.0" fill="rgb(243,173,2)" rx="2" ry="2" />
<text  x="1189.79" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.27%)</title><rect x="1183.6" y="517" width="3.2" height="15.0" fill="rgb(233,229,4)" rx="2" ry="2" />
<text  x="1186.59" y="527.5" ></text>
</g>
<g >
<title>insert_vmap_area_augment.constprop.0 (2 samples, 0.54%)</title><rect x="394.8" y="357" width="6.4" height="15.0" fill="rgb(224,106,21)" rx="2" ry="2" />
<text  x="397.78" y="367.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.54%)</title><rect x="840.5" y="149" width="6.4" height="15.0" fill="rgb(247,195,13)" rx="2" ry="2" />
<text  x="843.49" y="159.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.27%)</title><rect x="503.8" y="293" width="3.2" height="15.0" fill="rgb(220,217,49)" rx="2" ry="2" />
<text  x="506.80" y="303.5" ></text>
</g>
<g >
<title>wake_up_new_task (65 samples, 17.66%)</title><rect x="930.3" y="437" width="208.4" height="15.0" fill="rgb(232,194,45)" rx="2" ry="2" />
<text  x="933.27" y="447.5" >wake_up_new_task</text>
</g>
<g >
<title>_cond_resched (1 samples, 0.27%)</title><rect x="407.6" y="389" width="3.2" height="15.0" fill="rgb(237,35,54)" rx="2" ry="2" />
<text  x="410.61" y="399.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.27%)</title><rect x="1186.8" y="469" width="3.2" height="15.0" fill="rgb(248,141,39)" rx="2" ry="2" />
<text  x="1189.79" y="479.5" ></text>
</g>
<g >
<title>__mutex_init (2 samples, 0.54%)</title><rect x="644.9" y="373" width="6.4" height="15.0" fill="rgb(241,183,48)" rx="2" ry="2" />
<text  x="647.89" y="383.5" ></text>
</g>
<g >
<title>dup_fd (2 samples, 0.54%)</title><rect x="324.2" y="421" width="6.5" height="15.0" fill="rgb(209,198,15)" rx="2" ry="2" />
<text  x="327.24" y="431.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.27%)</title><rect x="1183.6" y="421" width="3.2" height="15.0" fill="rgb(233,161,9)" rx="2" ry="2" />
<text  x="1186.59" y="431.5" ></text>
</g>
<g >
<title>clear_page_erms (5 samples, 1.36%)</title><rect x="471.7" y="261" width="16.1" height="15.0" fill="rgb(229,45,29)" rx="2" ry="2" />
<text  x="474.74" y="271.5" ></text>
</g>
<g >
<title>new_slab (7 samples, 1.90%)</title><rect x="465.3" y="357" width="22.5" height="15.0" fill="rgb(243,99,32)" rx="2" ry="2" />
<text  x="468.33" y="367.5" >n..</text>
</g>
<g >
<title>pvclock_clocksource_read (1 samples, 0.27%)</title><rect x="513.4" y="389" width="3.2" height="15.0" fill="rgb(214,114,43)" rx="2" ry="2" />
<text  x="516.42" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.27%)</title><rect x="266.5" y="421" width="3.2" height="15.0" fill="rgb(230,43,49)" rx="2" ry="2" />
<text  x="269.52" y="431.5" ></text>
</g>
<g >
<title>mod_zone_page_state (2 samples, 0.54%)</title><rect x="442.9" y="389" width="6.4" height="15.0" fill="rgb(207,213,6)" rx="2" ry="2" />
<text  x="445.88" y="399.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.27%)</title><rect x="1183.6" y="485" width="3.2" height="15.0" fill="rgb(214,147,27)" rx="2" ry="2" />
<text  x="1186.59" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (280 samples, 76.09%)</title><rect x="240.9" y="517" width="897.8" height="15.0" fill="rgb(251,101,23)" rx="2" ry="2" />
<text  x="243.87" y="527.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.27%)</title><rect x="468.5" y="277" width="3.2" height="15.0" fill="rgb(231,120,23)" rx="2" ry="2" />
<text  x="471.53" y="287.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.27%)</title><rect x="843.7" y="85" width="3.2" height="15.0" fill="rgb(232,76,40)" rx="2" ry="2" />
<text  x="846.70" y="95.5" ></text>
</g>
<g >
<title>copy_fs_struct (1 samples, 0.27%)</title><rect x="321.0" y="421" width="3.2" height="15.0" fill="rgb(207,89,30)" rx="2" ry="2" />
<text  x="324.03" y="431.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.27%)</title><rect x="843.7" y="101" width="3.2" height="15.0" fill="rgb(226,201,15)" rx="2" ry="2" />
<text  x="846.70" y="111.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge (3 samples, 0.82%)</title><rect x="337.1" y="389" width="9.6" height="15.0" fill="rgb(243,25,5)" rx="2" ry="2" />
<text  x="340.07" y="399.5" ></text>
</g>
<g >
<title>__perf_event_header__init_id.isra.0 (1 samples, 0.27%)</title><rect x="1186.8" y="357" width="3.2" height="15.0" fill="rgb(224,207,10)" rx="2" ry="2" />
<text  x="1189.79" y="367.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.27%)</title><rect x="321.0" y="405" width="3.2" height="15.0" fill="rgb(236,189,26)" rx="2" ry="2" />
<text  x="324.03" y="415.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.27%)</title><rect x="327.4" y="309" width="3.3" height="15.0" fill="rgb(241,79,37)" rx="2" ry="2" />
<text  x="330.45" y="319.5" ></text>
</g>
<g >
<title>hrtimer_init (1 samples, 0.27%)</title><rect x="875.8" y="309" width="3.2" height="15.0" fill="rgb(246,104,3)" rx="2" ry="2" />
<text  x="878.76" y="319.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.54%)</title><rect x="840.5" y="117" width="6.4" height="15.0" fill="rgb(219,51,40)" rx="2" ry="2" />
<text  x="843.49" y="127.5" ></text>
</g>
<g >
<title>kvm_clock_get_cycles (2 samples, 0.54%)</title><rect x="507.0" y="405" width="6.4" height="15.0" fill="rgb(212,155,53)" rx="2" ry="2" />
<text  x="510.01" y="415.5" ></text>
</g>
<g >
<title>ktime_get_real_ts64 (1 samples, 0.27%)</title><rect x="1174.0" y="453" width="3.2" height="15.0" fill="rgb(238,204,4)" rx="2" ry="2" />
<text  x="1176.97" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_wait4 (64 samples, 17.39%)</title><rect x="35.7" y="485" width="205.2" height="15.0" fill="rgb(227,131,38)" rx="2" ry="2" />
<text  x="38.65" y="495.5" >__x64_sys_wait4</text>
</g>
<g >
<title>pvclock_clocksource_read (2 samples, 0.54%)</title><rect x="507.0" y="389" width="6.4" height="15.0" fill="rgb(214,32,21)" rx="2" ry="2" />
<text  x="510.01" y="399.5" ></text>
</g>
<g >
<title>refcount_dec_not_one (1 samples, 0.27%)</title><rect x="843.7" y="37" width="3.2" height="15.0" fill="rgb(229,111,18)" rx="2" ry="2" />
<text  x="846.70" y="47.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.27%)</title><rect x="333.9" y="405" width="3.2" height="15.0" fill="rgb(216,201,6)" rx="2" ry="2" />
<text  x="336.86" y="415.5" ></text>
</g>
<g >
<title>__mutex_init (5 samples, 1.36%)</title><rect x="702.6" y="357" width="16.0" height="15.0" fill="rgb(226,127,27)" rx="2" ry="2" />
<text  x="705.61" y="367.5" ></text>
</g>
<g >
<title>memset_erms (2 samples, 0.54%)</title><rect x="491.0" y="405" width="6.4" height="15.0" fill="rgb(218,182,14)" rx="2" ry="2" />
<text  x="493.98" y="415.5" ></text>
</g>
<g >
<title>__hrtimer_init (1 samples, 0.27%)</title><rect x="875.8" y="293" width="3.2" height="15.0" fill="rgb(222,49,39)" rx="2" ry="2" />
<text  x="878.76" y="303.5" ></text>
</g>
<g >
<title>perf_event_init_task (111 samples, 30.16%)</title><rect x="535.9" y="421" width="355.9" height="15.0" fill="rgb(244,72,17)" rx="2" ry="2" />
<text  x="538.87" y="431.5" >perf_event_init_task</text>
</g>
<g >
<title>arch_local_irq_enable (1 samples, 0.27%)</title><rect x="285.8" y="421" width="3.2" height="15.0" fill="rgb(252,172,50)" rx="2" ry="2" />
<text  x="288.76" y="431.5" ></text>
</g>
<g >
<title>inherit_task_group.isra.0.part.0 (107 samples, 29.08%)</title><rect x="548.7" y="405" width="343.1" height="15.0" fill="rgb(249,228,4)" rx="2" ry="2" />
<text  x="551.70" y="415.5" >inherit_task_group.isra.0.part.0</text>
</g>
<g >
<title>ktime_get (2 samples, 0.54%)</title><rect x="507.0" y="421" width="6.4" height="15.0" fill="rgb(214,82,47)" rx="2" ry="2" />
<text  x="510.01" y="431.5" ></text>
</g>
<g >
<title>_do_fork (278 samples, 75.54%)</title><rect x="247.3" y="453" width="891.4" height="15.0" fill="rgb(227,31,43)" rx="2" ry="2" />
<text  x="250.28" y="463.5" >_do_fork</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.27%)</title><rect x="1186.8" y="533" width="3.2" height="15.0" fill="rgb(210,124,28)" rx="2" ry="2" />
<text  x="1189.79" y="543.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.27%)</title><rect x="314.6" y="373" width="3.2" height="15.0" fill="rgb(218,55,10)" rx="2" ry="2" />
<text  x="317.62" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.27%)</title><rect x="1186.8" y="517" width="3.2" height="15.0" fill="rgb(253,117,32)" rx="2" ry="2" />
<text  x="1189.79" y="527.5" ></text>
</g>
<g >
<title>__GI___wait4 (69 samples, 18.75%)</title><rect x="19.6" y="533" width="221.3" height="15.0" fill="rgb(243,178,28)" rx="2" ry="2" />
<text  x="22.62" y="543.5" >__GI___wait4</text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.27%)</title><rect x="503.8" y="405" width="3.2" height="15.0" fill="rgb(207,74,39)" rx="2" ry="2" />
<text  x="506.80" y="415.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (2 samples, 0.54%)</title><rect x="279.3" y="389" width="6.5" height="15.0" fill="rgb(237,147,38)" rx="2" ry="2" />
<text  x="282.35" y="399.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (37 samples, 10.05%)</title><rect x="737.9" y="245" width="118.6" height="15.0" fill="rgb(233,143,25)" rx="2" ry="2" />
<text  x="740.88" y="255.5" >__alloc_pages_..</text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.27%)</title><rect x="503.8" y="389" width="3.2" height="15.0" fill="rgb(254,88,7)" rx="2" ry="2" />
<text  x="506.80" y="399.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (46 samples, 12.50%)</title><rect x="721.8" y="357" width="147.5" height="15.0" fill="rgb(230,123,41)" rx="2" ry="2" />
<text  x="724.85" y="367.5" >kmem_cache_alloc_t..</text>
</g>
<g >
<title>rb_insert_color (1 samples, 0.27%)</title><rect x="401.2" y="357" width="3.2" height="15.0" fill="rgb(222,184,34)" rx="2" ry="2" />
<text  x="404.20" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_clone (278 samples, 75.54%)</title><rect x="247.3" y="485" width="891.4" height="15.0" fill="rgb(222,21,33)" rx="2" ry="2" />
<text  x="250.28" y="495.5" >__x64_sys_clone</text>
</g>
<g >
<title>__alloc_pages_nodemask (9 samples, 2.45%)</title><rect x="414.0" y="373" width="28.9" height="15.0" fill="rgb(216,225,35)" rx="2" ry="2" />
<text  x="417.02" y="383.5" >__..</text>
</g>
<g >
<title>__hrtimer_init (1 samples, 0.27%)</title><rect x="497.4" y="405" width="3.2" height="15.0" fill="rgb(209,138,45)" rx="2" ry="2" />
<text  x="500.39" y="415.5" ></text>
</g>
<g >
<title>wait_consider_task (13 samples, 3.53%)</title><rect x="199.2" y="421" width="41.7" height="15.0" fill="rgb(254,17,31)" rx="2" ry="2" />
<text  x="202.18" y="431.5" >wai..</text>
</g>
<g >
<title>schedule (51 samples, 13.86%)</title><rect x="35.7" y="421" width="163.5" height="15.0" fill="rgb(212,214,23)" rx="2" ry="2" />
<text  x="38.65" y="431.5" >schedule</text>
</g>
<g >
<title>__sched_fork (2 samples, 0.54%)</title><rect x="923.9" y="405" width="6.4" height="15.0" fill="rgb(220,66,16)" rx="2" ry="2" />
<text  x="926.86" y="415.5" ></text>
</g>
<g >
<title>__perf_event_header_size.isra.0 (1 samples, 0.27%)</title><rect x="651.3" y="373" width="3.2" height="15.0" fill="rgb(237,152,44)" rx="2" ry="2" />
<text  x="654.30" y="383.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (3 samples, 0.82%)</title><rect x="337.1" y="405" width="9.6" height="15.0" fill="rgb(238,161,8)" rx="2" ry="2" />
<text  x="340.07" y="415.5" ></text>
</g>
<g >
<title>common_file_perm (1 samples, 0.27%)</title><rect x="10.0" y="373" width="3.2" height="15.0" fill="rgb(229,141,11)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.27%)</title><rect x="503.8" y="373" width="3.2" height="15.0" fill="rgb(210,29,42)" rx="2" ry="2" />
<text  x="506.80" y="383.5" ></text>
</g>
<g >
<title>allocate_slab (41 samples, 11.14%)</title><rect x="728.3" y="293" width="131.4" height="15.0" fill="rgb(231,42,54)" rx="2" ry="2" />
<text  x="731.26" y="303.5" >allocate_slab</text>
</g>
<g >
<title>[unknown] (2 samples, 0.54%)</title><rect x="10.0" y="549" width="6.4" height="15.0" fill="rgb(242,104,2)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>cgroup_post_fork (5 samples, 1.36%)</title><rect x="289.0" y="421" width="16.0" height="15.0" fill="rgb(219,206,45)" rx="2" ry="2" />
<text  x="291.97" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (3 samples, 0.82%)</title><rect x="1174.0" y="485" width="9.6" height="15.0" fill="rgb(243,152,25)" rx="2" ry="2" />
<text  x="1176.97" y="495.5" ></text>
</g>
<g >
<title>task_nr_scan_windows (1 samples, 0.27%)</title><rect x="927.1" y="357" width="3.2" height="15.0" fill="rgb(218,14,33)" rx="2" ry="2" />
<text  x="930.07" y="367.5" ></text>
</g>
<g >
<title>cpu_clock_event_init (1 samples, 0.27%)</title><rect x="875.8" y="341" width="3.2" height="15.0" fill="rgb(221,95,54)" rx="2" ry="2" />
<text  x="878.76" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.27%)</title><rect x="545.5" y="405" width="3.2" height="15.0" fill="rgb(222,101,52)" rx="2" ry="2" />
<text  x="548.49" y="415.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.27%)</title><rect x="1141.9" y="485" width="3.2" height="15.0" fill="rgb(218,7,31)" rx="2" ry="2" />
<text  x="1144.90" y="495.5" ></text>
</g>
<g >
<title>prepare_creds (5 samples, 1.36%)</title><rect x="305.0" y="405" width="16.0" height="15.0" fill="rgb(250,123,2)" rx="2" ry="2" />
<text  x="308.00" y="415.5" ></text>
</g>
<g >
<title>printf (1 samples, 0.27%)</title><rect x="1141.9" y="533" width="3.2" height="15.0" fill="rgb(240,201,0)" rx="2" ry="2" />
<text  x="1144.90" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.27%)</title><rect x="247.3" y="437" width="3.2" height="15.0" fill="rgb(243,90,21)" rx="2" ry="2" />
<text  x="250.28" y="447.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.82%)</title><rect x="308.2" y="389" width="9.6" height="15.0" fill="rgb(244,21,19)" rx="2" ry="2" />
<text  x="311.21" y="399.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.27%)</title><rect x="439.7" y="341" width="3.2" height="15.0" fill="rgb(205,46,42)" rx="2" ry="2" />
<text  x="442.67" y="351.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.27%)</title><rect x="1183.6" y="437" width="3.2" height="15.0" fill="rgb(217,13,36)" rx="2" ry="2" />
<text  x="1186.59" y="447.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.27%)</title><rect x="407.6" y="341" width="3.2" height="15.0" fill="rgb(252,212,4)" rx="2" ry="2" />
<text  x="410.61" y="351.5" ></text>
</g>
<g >
<title>account_kernel_stack (2 samples, 0.54%)</title><rect x="442.9" y="405" width="6.4" height="15.0" fill="rgb(208,171,0)" rx="2" ry="2" />
<text  x="445.88" y="415.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.27%)</title><rect x="1141.9" y="517" width="3.2" height="15.0" fill="rgb(231,36,42)" rx="2" ry="2" />
<text  x="1144.90" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.27%)</title><rect x="10.0" y="485" width="3.2" height="15.0" fill="rgb(232,192,52)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.27%)</title><rect x="1186.8" y="421" width="3.2" height="15.0" fill="rgb(245,40,44)" rx="2" ry="2" />
<text  x="1189.79" y="431.5" ></text>
</g>
<g >
<title>pids_release (1 samples, 0.27%)</title><rect x="231.2" y="357" width="3.3" height="15.0" fill="rgb(205,215,26)" rx="2" ry="2" />
<text  x="234.25" y="367.5" ></text>
</g>
<g >
<title>alloc_vmap_area (15 samples, 4.08%)</title><rect x="356.3" y="373" width="48.1" height="15.0" fill="rgb(211,71,10)" rx="2" ry="2" />
<text  x="359.30" y="383.5" >allo..</text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.54%)</title><rect x="840.5" y="133" width="6.4" height="15.0" fill="rgb(230,162,7)" rx="2" ry="2" />
<text  x="843.49" y="143.5" ></text>
</g>
<g >
<title>perf_iterate_sb (5 samples, 1.36%)</title><rect x="519.8" y="389" width="16.1" height="15.0" fill="rgb(216,158,52)" rx="2" ry="2" />
<text  x="522.84" y="399.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.27%)</title><rect x="1141.9" y="501" width="3.2" height="15.0" fill="rgb(215,100,11)" rx="2" ry="2" />
<text  x="1144.90" y="511.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.27%)</title><rect x="856.5" y="261" width="3.2" height="15.0" fill="rgb(243,117,1)" rx="2" ry="2" />
<text  x="859.52" y="271.5" ></text>
</g>
<g >
<title>perf_swevent_init_hrtimer (1 samples, 0.27%)</title><rect x="875.8" y="325" width="3.2" height="15.0" fill="rgb(246,81,24)" rx="2" ry="2" />
<text  x="878.76" y="335.5" ></text>
</g>
<g >
<title>copy_process (211 samples, 57.34%)</title><rect x="253.7" y="437" width="676.6" height="15.0" fill="rgb(220,151,48)" rx="2" ry="2" />
<text  x="256.70" y="447.5" >copy_process</text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.27%)</title><rect x="503.8" y="309" width="3.2" height="15.0" fill="rgb(233,170,45)" rx="2" ry="2" />
<text  x="506.80" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_clone (1 samples, 0.27%)</title><rect x="240.9" y="501" width="3.2" height="15.0" fill="rgb(213,212,12)" rx="2" ry="2" />
<text  x="243.87" y="511.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.27%)</title><rect x="327.4" y="325" width="3.3" height="15.0" fill="rgb(245,85,18)" rx="2" ry="2" />
<text  x="330.45" y="335.5" ></text>
</g>
<g >
<title>__lock_text_start (65 samples, 17.66%)</title><rect x="930.3" y="421" width="208.4" height="15.0" fill="rgb(247,220,19)" rx="2" ry="2" />
<text  x="933.27" y="431.5" >__lock_text_start</text>
</g>
<g >
<title>find_vm_area (2 samples, 0.54%)</title><rect x="449.3" y="405" width="6.4" height="15.0" fill="rgb(242,28,53)" rx="2" ry="2" />
<text  x="452.29" y="415.5" ></text>
</g>
<g >
<title>__rb_insert_augmented (1 samples, 0.27%)</title><rect x="398.0" y="341" width="3.2" height="15.0" fill="rgb(209,36,54)" rx="2" ry="2" />
<text  x="400.99" y="351.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.27%)</title><rect x="407.6" y="357" width="3.2" height="15.0" fill="rgb(246,111,19)" rx="2" ry="2" />
<text  x="410.61" y="367.5" ></text>
</g>
<g >
<title>init_numa_balancing (1 samples, 0.27%)</title><rect x="927.1" y="389" width="3.2" height="15.0" fill="rgb(250,196,46)" rx="2" ry="2" />
<text  x="930.07" y="399.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.54%)</title><rect x="279.3" y="405" width="6.5" height="15.0" fill="rgb(252,44,37)" rx="2" ry="2" />
<text  x="282.35" y="415.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.27%)</title><rect x="1186.8" y="485" width="3.2" height="15.0" fill="rgb(251,15,17)" rx="2" ry="2" />
<text  x="1189.79" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.27%)</title><rect x="458.9" y="389" width="3.2" height="15.0" fill="rgb(241,215,6)" rx="2" ry="2" />
<text  x="461.91" y="399.5" ></text>
</g>
<g >
<title>get_random_u64 (2 samples, 0.54%)</title><rect x="455.7" y="405" width="6.4" height="15.0" fill="rgb(244,40,33)" rx="2" ry="2" />
<text  x="458.71" y="415.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 0.27%)</title><rect x="513.4" y="421" width="3.2" height="15.0" fill="rgb(238,200,52)" rx="2" ry="2" />
<text  x="516.42" y="431.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.27%)</title><rect x="327.4" y="293" width="3.3" height="15.0" fill="rgb(229,131,35)" rx="2" ry="2" />
<text  x="330.45" y="303.5" ></text>
</g>
<g >
<title>perf_event_task_output (3 samples, 0.82%)</title><rect x="526.2" y="357" width="9.7" height="15.0" fill="rgb(210,38,13)" rx="2" ry="2" />
<text  x="529.25" y="367.5" ></text>
</g>
<g >
<title>posix_get_realtime_timespec (3 samples, 0.82%)</title><rect x="1174.0" y="469" width="9.6" height="15.0" fill="rgb(211,47,2)" rx="2" ry="2" />
<text  x="1176.97" y="479.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.27%)</title><rect x="1183.6" y="453" width="3.2" height="15.0" fill="rgb(208,74,8)" rx="2" ry="2" />
<text  x="1186.59" y="463.5" ></text>
</g>
<g >
<title>__hrtimer_init (1 samples, 0.27%)</title><rect x="923.9" y="357" width="3.2" height="15.0" fill="rgb(207,107,50)" rx="2" ry="2" />
<text  x="926.86" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.27%)</title><rect x="1183.6" y="549" width="3.2" height="15.0" fill="rgb(229,157,3)" rx="2" ry="2" />
<text  x="1186.59" y="559.5" ></text>
</g>
<g >
<title>alloc_pages_current (37 samples, 10.05%)</title><rect x="737.9" y="261" width="118.6" height="15.0" fill="rgb(250,17,19)" rx="2" ry="2" />
<text  x="740.88" y="271.5" >alloc_pages_cu..</text>
</g>
<g >
<title>cgroup_post_fork (1 samples, 0.27%)</title><rect x="250.5" y="437" width="3.2" height="15.0" fill="rgb(236,218,3)" rx="2" ry="2" />
<text  x="253.49" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (1 samples, 0.27%)</title><rect x="10.0" y="453" width="3.2" height="15.0" fill="rgb(209,223,24)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.27%)</title><rect x="1183.6" y="405" width="3.2" height="15.0" fill="rgb(253,113,2)" rx="2" ry="2" />
<text  x="1186.59" y="415.5" ></text>
</g>
<g >
<title>mprotect (1 samples, 0.27%)</title><rect x="10.0" y="501" width="3.2" height="15.0" fill="rgb(251,74,4)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.27%)</title><rect x="327.4" y="357" width="3.3" height="15.0" fill="rgb(227,120,30)" rx="2" ry="2" />
<text  x="330.45" y="367.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.27%)</title><rect x="327.4" y="373" width="3.3" height="15.0" fill="rgb(250,97,51)" rx="2" ry="2" />
<text  x="330.45" y="383.5" ></text>
</g>
<g >
<title>cpu_cgroup_fork (3 samples, 0.82%)</title><rect x="295.4" y="405" width="9.6" height="15.0" fill="rgb(226,219,5)" rx="2" ry="2" />
<text  x="298.38" y="415.5" ></text>
</g>
<g >
<title>memset_erms (2 samples, 0.54%)</title><rect x="869.3" y="357" width="6.5" height="15.0" fill="rgb(207,186,38)" rx="2" ry="2" />
<text  x="872.35" y="367.5" ></text>
</g>
<g >
<title>___slab_alloc (44 samples, 11.96%)</title><rect x="728.3" y="325" width="141.0" height="15.0" fill="rgb(237,51,34)" rx="2" ry="2" />
<text  x="731.26" y="335.5" >___slab_alloc</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.27%)</title><rect x="1183.6" y="533" width="3.2" height="15.0" fill="rgb(232,100,8)" rx="2" ry="2" />
<text  x="1186.59" y="543.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.27%)</title><rect x="503.8" y="325" width="3.2" height="15.0" fill="rgb(221,25,34)" rx="2" ry="2" />
<text  x="506.80" y="335.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.27%)</title><rect x="1183.6" y="373" width="3.2" height="15.0" fill="rgb(218,89,19)" rx="2" ry="2" />
<text  x="1186.59" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (279 samples, 75.82%)</title><rect x="244.1" y="501" width="894.6" height="15.0" fill="rgb(216,133,24)" rx="2" ry="2" />
<text  x="247.08" y="511.5" >do_syscall_64</text>
</g>
<g >
<title>__percpu_down_read (1 samples, 0.27%)</title><rect x="263.3" y="421" width="3.2" height="15.0" fill="rgb(243,114,54)" rx="2" ry="2" />
<text  x="266.32" y="431.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.27%)</title><rect x="327.4" y="389" width="3.3" height="15.0" fill="rgb(235,93,20)" rx="2" ry="2" />
<text  x="330.45" y="399.5" ></text>
</g>
<g >
<title>alloc_pid (5 samples, 1.36%)</title><rect x="269.7" y="421" width="16.1" height="15.0" fill="rgb(217,189,49)" rx="2" ry="2" />
<text  x="272.73" y="431.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.27%)</title><rect x="571.1" y="373" width="3.2" height="15.0" fill="rgb(235,221,40)" rx="2" ry="2" />
<text  x="574.14" y="383.5" ></text>
</g>
<g >
<title>__schedule (51 samples, 13.86%)</title><rect x="35.7" y="405" width="163.5" height="15.0" fill="rgb(245,3,18)" rx="2" ry="2" />
<text  x="38.65" y="415.5" >__schedule</text>
</g>
<g >
<title>inherit_event.isra.0 (96 samples, 26.09%)</title><rect x="574.3" y="389" width="307.9" height="15.0" fill="rgb(231,5,7)" rx="2" ry="2" />
<text  x="577.35" y="399.5" >inherit_event.isra.0</text>
</g>
<g >
<title>mmap64 (1 samples, 0.27%)</title><rect x="1186.8" y="549" width="3.2" height="15.0" fill="rgb(247,174,38)" rx="2" ry="2" />
<text  x="1189.79" y="559.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (1 samples, 0.27%)</title><rect x="10.0" y="437" width="3.2" height="15.0" fill="rgb(228,156,21)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>security_file_mprotect (1 samples, 0.27%)</title><rect x="10.0" y="421" width="3.2" height="15.0" fill="rgb(238,33,48)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.27%)</title><rect x="1186.8" y="453" width="3.2" height="15.0" fill="rgb(245,140,33)" rx="2" ry="2" />
<text  x="1189.79" y="463.5" ></text>
</g>
<g >
<title>setup_object_debug.isra.0 (3 samples, 0.82%)</title><rect x="859.7" y="293" width="9.6" height="15.0" fill="rgb(244,172,26)" rx="2" ry="2" />
<text  x="862.73" y="303.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.27%)</title><rect x="343.5" y="373" width="3.2" height="15.0" fill="rgb(230,4,32)" rx="2" ry="2" />
<text  x="346.48" y="383.5" ></text>
</g>
<g >
<title>hrtimer_init (1 samples, 0.27%)</title><rect x="923.9" y="373" width="3.2" height="15.0" fill="rgb(236,20,17)" rx="2" ry="2" />
<text  x="926.86" y="383.5" ></text>
</g>
<g >
<title>new_slab (44 samples, 11.96%)</title><rect x="728.3" y="309" width="141.0" height="15.0" fill="rgb(226,67,31)" rx="2" ry="2" />
<text  x="731.26" y="319.5" >new_slab</text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.54%)</title><rect x="500.6" y="421" width="6.4" height="15.0" fill="rgb(216,0,37)" rx="2" ry="2" />
<text  x="503.60" y="431.5" ></text>
</g>
<g >
<title>sched_fork (9 samples, 2.45%)</title><rect x="901.4" y="421" width="28.9" height="15.0" fill="rgb(245,0,46)" rx="2" ry="2" />
<text  x="904.41" y="431.5" >sc..</text>
</g>
<g >
<title>free_uid (1 samples, 0.27%)</title><rect x="843.7" y="53" width="3.2" height="15.0" fill="rgb(245,132,0)" rx="2" ry="2" />
<text  x="846.70" y="63.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (1 samples, 0.27%)</title><rect x="1183.6" y="389" width="3.2" height="15.0" fill="rgb(250,9,47)" rx="2" ry="2" />
<text  x="1186.59" y="399.5" ></text>
</g>
<g >
<title>task_active_pid_ns (1 samples, 0.27%)</title><rect x="879.0" y="357" width="3.2" height="15.0" fill="rgb(252,208,52)" rx="2" ry="2" />
<text  x="881.97" y="367.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.27%)</title><rect x="1183.6" y="501" width="3.2" height="15.0" fill="rgb(249,18,48)" rx="2" ry="2" />
<text  x="1186.59" y="511.5" ></text>
</g>
<g >
<title>perf_event_alloc (68 samples, 18.48%)</title><rect x="664.1" y="373" width="218.1" height="15.0" fill="rgb(219,116,50)" rx="2" ry="2" />
<text  x="667.13" y="383.5" >perf_event_alloc</text>
</g>
<g >
<title>do_syscall_64 (6 samples, 1.63%)</title><rect x="1164.3" y="501" width="19.3" height="15.0" fill="rgb(207,207,25)" rx="2" ry="2" />
<text  x="1167.35" y="511.5" ></text>
</g>
<g >
<title>mutex_unlock (3 samples, 0.82%)</title><rect x="882.2" y="389" width="9.6" height="15.0" fill="rgb(246,151,29)" rx="2" ry="2" />
<text  x="885.17" y="399.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.27%)</title><rect x="468.5" y="293" width="3.2" height="15.0" fill="rgb(232,0,20)" rx="2" ry="2" />
<text  x="471.53" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.54%)</title><rect x="840.5" y="197" width="6.4" height="15.0" fill="rgb(217,197,9)" rx="2" ry="2" />
<text  x="843.49" y="207.5" ></text>
</g>
<g >
<title>__do_sys_clone (278 samples, 75.54%)</title><rect x="247.3" y="469" width="891.4" height="15.0" fill="rgb(217,65,31)" rx="2" ry="2" />
<text  x="250.28" y="479.5" >__do_sys_clone</text>
</g>
<g >
<title>memcpy_erms (2 samples, 0.54%)</title><rect x="526.2" y="325" width="6.5" height="15.0" fill="rgb(252,186,44)" rx="2" ry="2" />
<text  x="529.25" y="335.5" ></text>
</g>
<g >
<title>alloc_perf_context (3 samples, 0.82%)</title><rect x="564.7" y="389" width="9.6" height="15.0" fill="rgb(252,84,54)" rx="2" ry="2" />
<text  x="567.73" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (65 samples, 17.66%)</title><rect x="32.4" y="501" width="208.5" height="15.0" fill="rgb(214,46,52)" rx="2" ry="2" />
<text  x="35.45" y="511.5" >do_syscall_64</text>
</g>
<g >
<title>cgroup_release (1 samples, 0.27%)</title><rect x="231.2" y="373" width="3.3" height="15.0" fill="rgb(213,191,13)" rx="2" ry="2" />
<text  x="234.25" y="383.5" ></text>
</g>
<g >
<title>do_wait (64 samples, 17.39%)</title><rect x="35.7" y="437" width="205.2" height="15.0" fill="rgb(215,193,6)" rx="2" ry="2" />
<text  x="38.65" y="447.5" >do_wait</text>
</g>
<g >
<title>__slab_alloc (7 samples, 1.90%)</title><rect x="465.3" y="389" width="22.5" height="15.0" fill="rgb(210,64,39)" rx="2" ry="2" />
<text  x="468.33" y="399.5" >_..</text>
</g>
<g >
<title>perf_output_begin (1 samples, 0.27%)</title><rect x="532.7" y="341" width="3.2" height="15.0" fill="rgb(252,11,36)" rx="2" ry="2" />
<text  x="535.66" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.27%)</title><rect x="327.4" y="405" width="3.3" height="15.0" fill="rgb(237,14,18)" rx="2" ry="2" />
<text  x="330.45" y="415.5" ></text>
</g>
<g >
<title>all (368 samples, 100%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(205,110,17)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.27%)</title><rect x="516.6" y="421" width="3.2" height="15.0" fill="rgb(221,19,0)" rx="2" ry="2" />
<text  x="519.63" y="431.5" ></text>
</g>
<g >
<title>get_page_from_freelist (9 samples, 2.45%)</title><rect x="414.0" y="357" width="28.9" height="15.0" fill="rgb(244,204,22)" rx="2" ry="2" />
<text  x="417.02" y="367.5" >ge..</text>
</g>
<g >
<title>hrtimer_init (1 samples, 0.27%)</title><rect x="497.4" y="421" width="3.2" height="15.0" fill="rgb(231,158,52)" rx="2" ry="2" />
<text  x="500.39" y="431.5" ></text>
</g>
<g >
<title>perf_event_fork (5 samples, 1.36%)</title><rect x="519.8" y="421" width="16.1" height="15.0" fill="rgb(220,24,52)" rx="2" ry="2" />
<text  x="522.84" y="431.5" ></text>
</g>
<g >
<title>insert_vmap_area.constprop.0 (3 samples, 0.82%)</title><rect x="385.2" y="357" width="9.6" height="15.0" fill="rgb(215,79,23)" rx="2" ry="2" />
<text  x="388.16" y="367.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (10 samples, 2.72%)</title><rect x="1151.5" y="549" width="32.1" height="15.0" fill="rgb(209,130,9)" rx="2" ry="2" />
<text  x="1154.52" y="559.5" >cl..</text>
</g>
<g >
<title>thread_group_cputime_adjusted (1 samples, 0.27%)</title><rect x="237.7" y="389" width="3.2" height="15.0" fill="rgb(216,185,45)" rx="2" ry="2" />
<text  x="240.66" y="399.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (1 samples, 0.27%)</title><rect x="1186.8" y="389" width="3.2" height="15.0" fill="rgb(244,97,4)" rx="2" ry="2" />
<text  x="1189.79" y="399.5" ></text>
</g>
<g >
<title>kernel_wait4 (64 samples, 17.39%)</title><rect x="35.7" y="453" width="205.2" height="15.0" fill="rgb(252,50,39)" rx="2" ry="2" />
<text  x="38.65" y="463.5" >kernel_wait4</text>
</g>
<g >
<title>allocate_slab (1 samples, 0.27%)</title><rect x="503.8" y="357" width="3.2" height="15.0" fill="rgb(230,89,9)" rx="2" ry="2" />
<text  x="506.80" y="367.5" ></text>
</g>
<g >
<title>rb_next (3 samples, 0.82%)</title><rect x="891.8" y="421" width="9.6" height="15.0" fill="rgb(210,48,50)" rx="2" ry="2" />
<text  x="894.79" y="431.5" ></text>
</g>
<g >
<title>task_scan_max (1 samples, 0.27%)</title><rect x="927.1" y="373" width="3.2" height="15.0" fill="rgb(211,17,14)" rx="2" ry="2" />
<text  x="930.07" y="383.5" ></text>
</g>
<g >
<title>page_counter_try_charge (2 samples, 0.54%)</title><rect x="337.1" y="373" width="6.4" height="15.0" fill="rgb(213,32,6)" rx="2" ry="2" />
<text  x="340.07" y="383.5" ></text>
</g>
<g >
<title>mutex_lock (3 samples, 0.82%)</title><rect x="654.5" y="373" width="9.6" height="15.0" fill="rgb(211,134,12)" rx="2" ry="2" />
<text  x="657.51" y="383.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (8 samples, 2.17%)</title><rect x="462.1" y="405" width="25.7" height="15.0" fill="rgb(207,177,2)" rx="2" ry="2" />
<text  x="465.12" y="415.5" >k..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.54%)</title><rect x="840.5" y="181" width="6.4" height="15.0" fill="rgb(224,176,11)" rx="2" ry="2" />
<text  x="843.49" y="191.5" ></text>
</g>
<g >
<title>__vmalloc_node_range (30 samples, 8.15%)</title><rect x="346.7" y="405" width="96.2" height="15.0" fill="rgb(243,70,42)" rx="2" ry="2" />
<text  x="349.68" y="415.5" >__vmalloc_n..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (65 samples, 17.66%)</title><rect x="32.4" y="517" width="208.5" height="15.0" fill="rgb(229,163,51)" rx="2" ry="2" />
<text  x="35.45" y="527.5" >entry_SYSCALL_64_after_hwfr..</text>
</g>
<g >
<title>clear_page_erms (33 samples, 8.97%)</title><rect x="741.1" y="213" width="105.8" height="15.0" fill="rgb(231,218,18)" rx="2" ry="2" />
<text  x="744.09" y="223.5" >clear_page_e..</text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.27%)</title><rect x="16.4" y="501" width="3.2" height="15.0" fill="rgb(206,136,1)" rx="2" ry="2" />
<text  x="19.41" y="511.5" ></text>
</g>
<g >
<title>rmqueue (2 samples, 0.54%)</title><rect x="850.1" y="213" width="6.4" height="15.0" fill="rgb(233,171,34)" rx="2" ry="2" />
<text  x="853.11" y="223.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.54%)</title><rect x="840.5" y="165" width="6.4" height="15.0" fill="rgb(250,33,48)" rx="2" ry="2" />
<text  x="843.49" y="175.5" ></text>
</g>
<g >
<title>init_dl_task_timer (1 samples, 0.27%)</title><rect x="923.9" y="389" width="3.2" height="15.0" fill="rgb(247,66,45)" rx="2" ry="2" />
<text  x="926.86" y="399.5" ></text>
</g>
<g >
<title>time_ns (1 samples, 0.27%)</title><rect x="1145.1" y="533" width="3.2" height="15.0" fill="rgb(234,45,23)" rx="2" ry="2" />
<text  x="1148.11" y="543.5" ></text>
</g>
<g >
<title>__slab_alloc (44 samples, 11.96%)</title><rect x="728.3" y="341" width="141.0" height="15.0" fill="rgb(232,27,52)" rx="2" ry="2" />
<text  x="731.26" y="351.5" >__slab_alloc</text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.27%)</title><rect x="10.0" y="533" width="3.2" height="15.0" fill="rgb(238,124,39)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>__lock_text_start (9 samples, 2.45%)</title><rect x="616.0" y="373" width="28.9" height="15.0" fill="rgb(237,161,2)" rx="2" ry="2" />
<text  x="619.03" y="383.5" >__..</text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.27%)</title><rect x="503.8" y="277" width="3.2" height="15.0" fill="rgb(208,154,35)" rx="2" ry="2" />
<text  x="506.80" y="287.5" ></text>
</g>
<g >
<title>put_task_struct_rcu_user (1 samples, 0.27%)</title><rect x="234.5" y="373" width="3.2" height="15.0" fill="rgb(220,16,26)" rx="2" ry="2" />
<text  x="237.46" y="383.5" ></text>
</g>
<g >
<title>perf_try_init_event (1 samples, 0.27%)</title><rect x="875.8" y="357" width="3.2" height="15.0" fill="rgb(208,30,6)" rx="2" ry="2" />
<text  x="878.76" y="367.5" ></text>
</g>
<g >
<title>preempt_schedule_common (1 samples, 0.27%)</title><rect x="407.6" y="373" width="3.2" height="15.0" fill="rgb(236,79,23)" rx="2" ry="2" />
<text  x="410.61" y="383.5" ></text>
</g>
<g >
<title>release_task (12 samples, 3.26%)</title><rect x="199.2" y="389" width="38.5" height="15.0" fill="rgb(224,49,45)" rx="2" ry="2" />
<text  x="202.18" y="399.5" >rel..</text>
</g>
<g >
<title>kmem_cache_alloc_node_trace (1 samples, 0.27%)</title><rect x="404.4" y="373" width="3.2" height="15.0" fill="rgb(247,221,35)" rx="2" ry="2" />
<text  x="407.40" y="383.5" ></text>
</g>
<g >
<title>main (1 samples, 0.27%)</title><rect x="1138.7" y="533" width="3.2" height="15.0" fill="rgb(223,64,23)" rx="2" ry="2" />
<text  x="1141.70" y="543.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.82%)</title><rect x="295.4" y="389" width="9.6" height="15.0" fill="rgb(249,163,39)" rx="2" ry="2" />
<text  x="298.38" y="399.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.27%)</title><rect x="487.8" y="405" width="3.2" height="15.0" fill="rgb(210,195,42)" rx="2" ry="2" />
<text  x="490.77" y="415.5" ></text>
</g>
<g >
<title>get_common_indices.constprop.0 (1 samples, 0.27%)</title><rect x="13.2" y="533" width="3.2" height="15.0" fill="rgb(215,191,45)" rx="2" ry="2" />
<text  x="16.21" y="543.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.27%)</title><rect x="16.4" y="533" width="3.2" height="15.0" fill="rgb(219,177,22)" rx="2" ry="2" />
<text  x="19.41" y="543.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.27%)</title><rect x="455.7" y="389" width="3.2" height="15.0" fill="rgb(210,182,45)" rx="2" ry="2" />
<text  x="458.71" y="399.5" ></text>
</g>
<g >
<title>dup_task_struct (52 samples, 14.13%)</title><rect x="330.7" y="421" width="166.7" height="15.0" fill="rgb(241,126,2)" rx="2" ry="2" />
<text  x="333.65" y="431.5" >dup_task_struct</text>
</g>
<g >
<title>get_random_u32 (1 samples, 0.27%)</title><rect x="856.5" y="277" width="3.2" height="15.0" fill="rgb(232,160,7)" rx="2" ry="2" />
<text  x="859.52" y="287.5" ></text>
</g>
<g >
<title>kvm_clock_get_cycles (1 samples, 0.27%)</title><rect x="513.4" y="405" width="3.2" height="15.0" fill="rgb(205,168,10)" rx="2" ry="2" />
<text  x="516.42" y="415.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.27%)</title><rect x="846.9" y="213" width="3.2" height="15.0" fill="rgb(241,97,2)" rx="2" ry="2" />
<text  x="849.90" y="223.5" ></text>
</g>
<g >
<title>__lock_text_start (7 samples, 1.90%)</title><rect x="901.4" y="405" width="22.5" height="15.0" fill="rgb(205,56,33)" rx="2" ry="2" />
<text  x="904.41" y="415.5" >_..</text>
</g>
<g >
<title>put_cred_rcu (1 samples, 0.27%)</title><rect x="843.7" y="69" width="3.2" height="15.0" fill="rgb(206,117,29)" rx="2" ry="2" />
<text  x="846.70" y="79.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.27%)</title><rect x="1186.8" y="405" width="3.2" height="15.0" fill="rgb(214,89,47)" rx="2" ry="2" />
<text  x="1189.79" y="415.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (1 samples, 0.27%)</title><rect x="718.6" y="357" width="3.2" height="15.0" fill="rgb(208,131,21)" rx="2" ry="2" />
<text  x="721.64" y="367.5" ></text>
</g>
<g >
<title>copy_creds (5 samples, 1.36%)</title><rect x="305.0" y="421" width="16.0" height="15.0" fill="rgb(206,157,14)" rx="2" ry="2" />
<text  x="308.00" y="431.5" ></text>
</g>
<g >
<title>kvm_clock_get_cycles (2 samples, 0.54%)</title><rect x="1177.2" y="453" width="6.4" height="15.0" fill="rgb(214,51,9)" rx="2" ry="2" />
<text  x="1180.17" y="463.5" ></text>
</g>
<g >
<title>perf_event_task (5 samples, 1.36%)</title><rect x="519.8" y="405" width="16.1" height="15.0" fill="rgb(236,188,19)" rx="2" ry="2" />
<text  x="522.84" y="415.5" ></text>
</g>
<g >
<title>get_page_from_freelist (36 samples, 9.78%)</title><rect x="741.1" y="229" width="115.4" height="15.0" fill="rgb(231,82,44)" rx="2" ry="2" />
<text  x="744.09" y="239.5" >get_page_from_..</text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.27%)</title><rect x="542.3" y="405" width="3.2" height="15.0" fill="rgb(244,40,35)" rx="2" ry="2" />
<text  x="545.28" y="415.5" ></text>
</g>
<g >
<title>alloc_slab_page (1 samples, 0.27%)</title><rect x="503.8" y="341" width="3.2" height="15.0" fill="rgb(225,67,13)" rx="2" ry="2" />
<text  x="506.80" y="351.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.27%)</title><rect x="16.4" y="517" width="3.2" height="15.0" fill="rgb(209,122,42)" rx="2" ry="2" />
<text  x="19.41" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.27%)</title><rect x="1186.8" y="501" width="3.2" height="15.0" fill="rgb(205,173,52)" rx="2" ry="2" />
<text  x="1189.79" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (5 samples, 1.36%)</title><rect x="471.7" y="293" width="16.1" height="15.0" fill="rgb(208,201,17)" rx="2" ry="2" />
<text  x="474.74" y="303.5" ></text>
</g>
<g >
<title>common_mmap.part.0 (1 samples, 0.27%)</title><rect x="10.0" y="389" width="3.2" height="15.0" fill="rgb(239,127,49)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.27%)</title><rect x="1186.8" y="437" width="3.2" height="15.0" fill="rgb(220,120,24)" rx="2" ry="2" />
<text  x="1189.79" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.63%)</title><rect x="1164.3" y="517" width="19.3" height="15.0" fill="rgb(212,221,46)" rx="2" ry="2" />
<text  x="1167.35" y="527.5" ></text>
</g>
<g >
<title>find_vmap_area (1 samples, 0.27%)</title><rect x="452.5" y="389" width="3.2" height="15.0" fill="rgb(210,11,30)" rx="2" ry="2" />
<text  x="455.50" y="399.5" ></text>
</g>
<g >
<title>__ctype_init (1 samples, 0.27%)</title><rect x="16.4" y="549" width="3.2" height="15.0" fill="rgb(238,107,49)" rx="2" ry="2" />
<text  x="19.41" y="559.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (1 samples, 0.27%)</title><rect x="1186.8" y="373" width="3.2" height="15.0" fill="rgb(254,29,49)" rx="2" ry="2" />
<text  x="1189.79" y="383.5" ></text>
</g>
<g >
<title>allocate_slab (7 samples, 1.90%)</title><rect x="465.3" y="341" width="22.5" height="15.0" fill="rgb(247,196,44)" rx="2" ry="2" />
<text  x="468.33" y="351.5" >a..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.27%)</title><rect x="10.0" y="469" width="3.2" height="15.0" fill="rgb(242,86,24)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>alloc_slab_page (37 samples, 10.05%)</title><rect x="737.9" y="277" width="118.6" height="15.0" fill="rgb(244,29,48)" rx="2" ry="2" />
<text  x="740.88" y="287.5" >alloc_slab_page</text>
</g>
<g >
<title>__do_sys_wait4 (64 samples, 17.39%)</title><rect x="35.7" y="469" width="205.2" height="15.0" fill="rgb(220,203,18)" rx="2" ry="2" />
<text  x="38.65" y="479.5" >__do_sys_wait4</text>
</g>
<g >
<title>__memcg_kmem_charge (1 samples, 0.27%)</title><rect x="468.5" y="309" width="3.2" height="15.0" fill="rgb(243,108,2)" rx="2" ry="2" />
<text  x="471.53" y="319.5" ></text>
</g>
<g >
<title>clear_page_erms (8 samples, 2.17%)</title><rect x="414.0" y="341" width="25.7" height="15.0" fill="rgb(230,7,43)" rx="2" ry="2" />
<text  x="417.02" y="351.5" >c..</text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.27%)</title><rect x="567.9" y="357" width="3.2" height="15.0" fill="rgb(254,209,3)" rx="2" ry="2" />
<text  x="570.93" y="367.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.27%)</title><rect x="1183.6" y="469" width="3.2" height="15.0" fill="rgb(224,136,42)" rx="2" ry="2" />
<text  x="1186.59" y="479.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (1 samples, 0.27%)</title><rect x="567.9" y="373" width="3.2" height="15.0" fill="rgb(254,134,37)" rx="2" ry="2" />
<text  x="570.93" y="383.5" ></text>
</g>
<g >
<title>my_clone (368 samples, 100.00%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(212,54,29)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >my_clone</text>
</g>
<g >
<title>__get_vm_area_node (16 samples, 4.35%)</title><rect x="356.3" y="389" width="51.3" height="15.0" fill="rgb(251,79,15)" rx="2" ry="2" />
<text  x="359.30" y="399.5" >__get..</text>
</g>
</g>
</svg>
