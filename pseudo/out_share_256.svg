<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="454.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="437" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="437" > </text>
<g id="frames">
<g >
<title>fpu__copy (1 samples, 0.29%)</title><rect x="465.4" y="213" width="3.5" height="15.0" fill="rgb(246,46,40)" rx="2" ry="2" />
<text  x="468.44" y="223.5" ></text>
</g>
<g >
<title>thread_group_cputime (1 samples, 0.29%)</title><rect x="258.4" y="197" width="3.5" height="15.0" fill="rgb(246,116,0)" rx="2" ry="2" />
<text  x="261.42" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.58%)</title><rect x="289.5" y="245" width="6.9" height="15.0" fill="rgb(238,60,16)" rx="2" ry="2" />
<text  x="292.47" y="255.5" ></text>
</g>
<g >
<title>get_random_u64 (1 samples, 0.29%)</title><rect x="472.3" y="229" width="3.5" height="15.0" fill="rgb(231,197,22)" rx="2" ry="2" />
<text  x="475.34" y="239.5" ></text>
</g>
<g >
<title>freezer_fork (1 samples, 0.29%)</title><rect x="520.6" y="245" width="3.5" height="15.0" fill="rgb(227,138,24)" rx="2" ry="2" />
<text  x="523.64" y="255.5" ></text>
</g>
<g >
<title>perf_event_init_task (111 samples, 32.46%)</title><rect x="572.4" y="245" width="383.0" height="15.0" fill="rgb(220,24,20)" rx="2" ry="2" />
<text  x="575.40" y="255.5" >perf_event_init_task</text>
</g>
<g >
<title>task_active_pid_ns (1 samples, 0.29%)</title><rect x="931.2" y="197" width="3.5" height="15.0" fill="rgb(209,213,4)" rx="2" ry="2" />
<text  x="934.23" y="207.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.29%)</title><rect x="869.1" y="37" width="3.5" height="15.0" fill="rgb(242,39,3)" rx="2" ry="2" />
<text  x="872.12" y="47.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.29%)</title><rect x="568.9" y="117" width="3.5" height="15.0" fill="rgb(210,175,47)" rx="2" ry="2" />
<text  x="571.95" y="127.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.29%)</title><rect x="1186.5" y="309" width="3.5" height="15.0" fill="rgb(243,110,35)" rx="2" ry="2" />
<text  x="1189.55" y="319.5" ></text>
</g>
<g >
<title>do_wait (64 samples, 18.71%)</title><rect x="41.1" y="261" width="220.8" height="15.0" fill="rgb(222,85,2)" rx="2" ry="2" />
<text  x="44.05" y="271.5" >do_wait</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.29%)</title><rect x="468.9" y="213" width="3.4" height="15.0" fill="rgb(239,204,14)" rx="2" ry="2" />
<text  x="471.89" y="223.5" ></text>
</g>
<g >
<title>__libc_start_main (331 samples, 96.78%)</title><rect x="16.9" y="373" width="1142.0" height="15.0" fill="rgb(208,18,35)" rx="2" ry="2" />
<text  x="19.90" y="383.5" >__libc_start_main</text>
</g>
<g >
<title>__put_task_struct (1 samples, 0.29%)</title><rect x="324.0" y="85" width="3.4" height="15.0" fill="rgb(227,222,7)" rx="2" ry="2" />
<text  x="326.98" y="95.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (6 samples, 1.75%)</title><rect x="1165.8" y="373" width="20.7" height="15.0" fill="rgb(229,70,52)" rx="2" ry="2" />
<text  x="1168.85" y="383.5" ></text>
</g>
<g >
<title>__mutex_init (3 samples, 0.88%)</title><rect x="758.7" y="181" width="10.4" height="15.0" fill="rgb(242,163,34)" rx="2" ry="2" />
<text  x="761.71" y="191.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (1 samples, 0.29%)</title><rect x="268.8" y="261" width="3.4" height="15.0" fill="rgb(224,43,23)" rx="2" ry="2" />
<text  x="271.77" y="271.5" ></text>
</g>
<g >
<title>hrtimer_init (1 samples, 0.29%)</title><rect x="958.8" y="197" width="3.5" height="15.0" fill="rgb(246,132,2)" rx="2" ry="2" />
<text  x="961.83" y="207.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.29%)</title><rect x="534.4" y="245" width="3.5" height="15.0" fill="rgb(222,148,38)" rx="2" ry="2" />
<text  x="537.44" y="255.5" ></text>
</g>
<g >
<title>wait_consider_task (13 samples, 3.80%)</title><rect x="217.0" y="245" width="44.9" height="15.0" fill="rgb(245,155,7)" rx="2" ry="2" />
<text  x="220.02" y="255.5" >wait..</text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.29%)</title><rect x="1186.5" y="245" width="3.5" height="15.0" fill="rgb(249,44,49)" rx="2" ry="2" />
<text  x="1189.55" y="255.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge (1 samples, 0.29%)</title><rect x="489.6" y="133" width="3.4" height="15.0" fill="rgb(209,163,13)" rx="2" ry="2" />
<text  x="492.59" y="143.5" ></text>
</g>
<g >
<title>copy_process (199 samples, 58.19%)</title><rect x="275.7" y="261" width="686.6" height="15.0" fill="rgb(231,157,31)" rx="2" ry="2" />
<text  x="278.67" y="271.5" >copy_process</text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.29%)</title><rect x="568.9" y="149" width="3.5" height="15.0" fill="rgb(235,118,12)" rx="2" ry="2" />
<text  x="571.95" y="159.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.29%)</title><rect x="527.5" y="229" width="3.5" height="15.0" fill="rgb(228,37,2)" rx="2" ry="2" />
<text  x="530.54" y="239.5" ></text>
</g>
<g >
<title>mutex_unlock (3 samples, 0.88%)</title><rect x="938.1" y="213" width="10.4" height="15.0" fill="rgb(253,157,47)" rx="2" ry="2" />
<text  x="941.13" y="223.5" ></text>
</g>
<g >
<title>perf_iterate_sb (8 samples, 2.34%)</title><rect x="544.8" y="213" width="27.6" height="15.0" fill="rgb(208,147,47)" rx="2" ry="2" />
<text  x="547.80" y="223.5" >p..</text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.29%)</title><rect x="324.0" y="197" width="3.4" height="15.0" fill="rgb(238,88,18)" rx="2" ry="2" />
<text  x="326.98" y="207.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.29%)</title><rect x="1162.4" y="357" width="3.4" height="15.0" fill="rgb(214,96,43)" rx="2" ry="2" />
<text  x="1165.40" y="367.5" ></text>
</g>
<g >
<title>__perf_addr_filters_adjust (1 samples, 0.29%)</title><rect x="1186.5" y="213" width="3.5" height="15.0" fill="rgb(230,90,25)" rx="2" ry="2" />
<text  x="1189.55" y="223.5" ></text>
</g>
<g >
<title>sched_fork (2 samples, 0.58%)</title><rect x="965.7" y="261" width="6.9" height="15.0" fill="rgb(232,93,34)" rx="2" ry="2" />
<text  x="968.73" y="271.5" ></text>
</g>
<g >
<title>kvm_clock_get_cycles (1 samples, 0.29%)</title><rect x="1179.6" y="261" width="3.5" height="15.0" fill="rgb(222,7,16)" rx="2" ry="2" />
<text  x="1182.65" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.29%)</title><rect x="1158.9" y="341" width="3.5" height="15.0" fill="rgb(214,68,3)" rx="2" ry="2" />
<text  x="1161.95" y="351.5" ></text>
</g>
<g >
<title>unlock_page_memcg (1 samples, 0.29%)</title><rect x="1162.4" y="229" width="3.4" height="15.0" fill="rgb(210,112,29)" rx="2" ry="2" />
<text  x="1165.40" y="239.5" ></text>
</g>
<g >
<title>prepare_creds (2 samples, 0.58%)</title><rect x="334.3" y="229" width="6.9" height="15.0" fill="rgb(213,16,8)" rx="2" ry="2" />
<text  x="337.33" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (67 samples, 19.59%)</title><rect x="30.7" y="341" width="231.2" height="15.0" fill="rgb(222,168,31)" rx="2" ry="2" />
<text  x="33.70" y="351.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>perf_event__header_size (1 samples, 0.29%)</title><rect x="696.6" y="197" width="3.5" height="15.0" fill="rgb(220,226,14)" rx="2" ry="2" />
<text  x="699.61" y="207.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.29%)</title><rect x="10.0" y="357" width="3.5" height="15.0" fill="rgb(216,161,41)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.29%)</title><rect x="1158.9" y="325" width="3.5" height="15.0" fill="rgb(244,207,23)" rx="2" ry="2" />
<text  x="1161.95" y="335.5" ></text>
</g>
<g >
<title>inherit_event.isra.0 (102 samples, 29.82%)</title><rect x="582.7" y="213" width="352.0" height="15.0" fill="rgb(215,88,4)" rx="2" ry="2" />
<text  x="585.75" y="223.5" >inherit_event.isra.0</text>
</g>
<g >
<title>rmqueue (3 samples, 0.88%)</title><rect x="451.6" y="165" width="10.4" height="15.0" fill="rgb(215,186,12)" rx="2" ry="2" />
<text  x="454.64" y="175.5" ></text>
</g>
<g >
<title>dup_fd (5 samples, 1.46%)</title><rect x="341.2" y="245" width="17.3" height="15.0" fill="rgb(209,178,53)" rx="2" ry="2" />
<text  x="344.23" y="255.5" ></text>
</g>
<g >
<title>posix_get_realtime_timespec (1 samples, 0.29%)</title><rect x="1179.6" y="293" width="3.5" height="15.0" fill="rgb(254,130,31)" rx="2" ry="2" />
<text  x="1182.65" y="303.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.29%)</title><rect x="493.0" y="85" width="3.5" height="15.0" fill="rgb(231,186,16)" rx="2" ry="2" />
<text  x="496.04" y="95.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.29%)</title><rect x="872.6" y="85" width="3.4" height="15.0" fill="rgb(245,59,45)" rx="2" ry="2" />
<text  x="875.57" y="95.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.29%)</title><rect x="1158.9" y="293" width="3.5" height="15.0" fill="rgb(237,15,41)" rx="2" ry="2" />
<text  x="1161.95" y="303.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.29%)</title><rect x="1158.9" y="229" width="3.5" height="15.0" fill="rgb(216,60,20)" rx="2" ry="2" />
<text  x="1161.95" y="239.5" ></text>
</g>
<g >
<title>inherit_task_group.isra.0.part.0 (108 samples, 31.58%)</title><rect x="582.7" y="229" width="372.7" height="15.0" fill="rgb(217,138,40)" rx="2" ry="2" />
<text  x="585.75" y="239.5" >inherit_task_group.isra.0.part.0</text>
</g>
<g >
<title>perf_event__id_header_size.isra.0 (1 samples, 0.29%)</title><rect x="948.5" y="213" width="3.4" height="15.0" fill="rgb(231,34,9)" rx="2" ry="2" />
<text  x="951.48" y="223.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.29%)</title><rect x="489.6" y="117" width="3.4" height="15.0" fill="rgb(251,118,26)" rx="2" ry="2" />
<text  x="492.59" y="127.5" ></text>
</g>
<g >
<title>local_clock (1 samples, 0.29%)</title><rect x="568.9" y="165" width="3.5" height="15.0" fill="rgb(236,104,21)" rx="2" ry="2" />
<text  x="571.95" y="175.5" ></text>
</g>
<g >
<title>kernel_wait4 (64 samples, 18.71%)</title><rect x="41.1" y="277" width="220.8" height="15.0" fill="rgb(228,56,22)" rx="2" ry="2" />
<text  x="44.05" y="287.5" >kernel_wait4</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.29%)</title><rect x="324.0" y="213" width="3.4" height="15.0" fill="rgb(228,159,52)" rx="2" ry="2" />
<text  x="326.98" y="223.5" ></text>
</g>
<g >
<title>allocate_slab (5 samples, 1.46%)</title><rect x="479.2" y="165" width="17.3" height="15.0" fill="rgb(245,127,49)" rx="2" ry="2" />
<text  x="482.24" y="175.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.29%)</title><rect x="541.3" y="245" width="3.5" height="15.0" fill="rgb(205,142,24)" rx="2" ry="2" />
<text  x="544.35" y="255.5" ></text>
</g>
<g >
<title>__slab_alloc (5 samples, 1.46%)</title><rect x="479.2" y="213" width="17.3" height="15.0" fill="rgb(213,6,3)" rx="2" ry="2" />
<text  x="482.24" y="223.5" ></text>
</g>
<g >
<title>wait_task_zombie (12 samples, 3.51%)</title><rect x="220.5" y="229" width="41.4" height="15.0" fill="rgb(224,40,13)" rx="2" ry="2" />
<text  x="223.47" y="239.5" >wai..</text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.29%)</title><rect x="1158.9" y="309" width="3.5" height="15.0" fill="rgb(249,104,47)" rx="2" ry="2" />
<text  x="1161.95" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (66 samples, 19.30%)</title><rect x="34.2" y="325" width="227.7" height="15.0" fill="rgb(245,169,33)" rx="2" ry="2" />
<text  x="37.15" y="335.5" >do_syscall_64</text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.29%)</title><rect x="1162.4" y="325" width="3.4" height="15.0" fill="rgb(243,28,33)" rx="2" ry="2" />
<text  x="1165.40" y="335.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.29%)</title><rect x="324.0" y="181" width="3.4" height="15.0" fill="rgb(235,200,0)" rx="2" ry="2" />
<text  x="326.98" y="191.5" ></text>
</g>
<g >
<title>___slab_alloc (5 samples, 1.46%)</title><rect x="479.2" y="197" width="17.3" height="15.0" fill="rgb(240,53,32)" rx="2" ry="2" />
<text  x="482.24" y="207.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (8 samples, 2.34%)</title><rect x="475.8" y="229" width="27.6" height="15.0" fill="rgb(236,31,29)" rx="2" ry="2" />
<text  x="478.79" y="239.5" >k..</text>
</g>
<g >
<title>delayed_put_task_struct (1 samples, 0.29%)</title><rect x="324.0" y="101" width="3.4" height="15.0" fill="rgb(249,181,17)" rx="2" ry="2" />
<text  x="326.98" y="111.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.29%)</title><rect x="1186.5" y="277" width="3.5" height="15.0" fill="rgb(211,80,54)" rx="2" ry="2" />
<text  x="1189.55" y="287.5" ></text>
</g>
<g >
<title>add_wait_queue (1 samples, 0.29%)</title><rect x="51.4" y="245" width="3.5" height="15.0" fill="rgb(226,10,23)" rx="2" ry="2" />
<text  x="54.40" y="255.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (7 samples, 2.05%)</title><rect x="361.9" y="229" width="24.2" height="15.0" fill="rgb(220,208,12)" rx="2" ry="2" />
<text  x="364.93" y="239.5" >_..</text>
</g>
<g >
<title>__vdso_clock_gettime (6 samples, 1.75%)</title><rect x="1165.8" y="357" width="20.7" height="15.0" fill="rgb(234,84,42)" rx="2" ry="2" />
<text  x="1168.85" y="367.5" ></text>
</g>
<g >
<title>call_rcu (1 samples, 0.29%)</title><rect x="255.0" y="181" width="3.4" height="15.0" fill="rgb(234,113,42)" rx="2" ry="2" />
<text  x="257.97" y="191.5" ></text>
</g>
<g >
<title>pvclock_clocksource_read (1 samples, 0.29%)</title><rect x="568.9" y="85" width="3.5" height="15.0" fill="rgb(222,92,25)" rx="2" ry="2" />
<text  x="571.95" y="95.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (2 samples, 0.58%)</title><rect x="317.1" y="245" width="6.9" height="15.0" fill="rgb(206,59,18)" rx="2" ry="2" />
<text  x="320.08" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_init (1 samples, 0.29%)</title><rect x="524.1" y="229" width="3.4" height="15.0" fill="rgb(217,207,27)" rx="2" ry="2" />
<text  x="527.09" y="239.5" ></text>
</g>
<g >
<title>release_task (10 samples, 2.92%)</title><rect x="223.9" y="213" width="34.5" height="15.0" fill="rgb(212,86,48)" rx="2" ry="2" />
<text  x="226.92" y="223.5" >re..</text>
</g>
<g >
<title>wake_up_new_task (53 samples, 15.50%)</title><rect x="972.6" y="261" width="182.9" height="15.0" fill="rgb(241,47,15)" rx="2" ry="2" />
<text  x="975.63" y="271.5" >wake_up_new_task</text>
</g>
<g >
<title>dl_main (1 samples, 0.29%)</title><rect x="10.0" y="341" width="3.5" height="15.0" fill="rgb(223,30,39)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (26 samples, 7.60%)</title><rect x="782.9" y="69" width="89.7" height="15.0" fill="rgb(216,46,51)" rx="2" ry="2" />
<text  x="785.87" y="79.5" >__alloc_pa..</text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.29%)</title><rect x="355.0" y="229" width="3.5" height="15.0" fill="rgb(220,47,37)" rx="2" ry="2" />
<text  x="358.03" y="239.5" ></text>
</g>
<g >
<title>try_module_get (1 samples, 0.29%)</title><rect x="927.8" y="181" width="3.4" height="15.0" fill="rgb(210,228,21)" rx="2" ry="2" />
<text  x="930.78" y="191.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.29%)</title><rect x="493.0" y="101" width="3.5" height="15.0" fill="rgb(243,190,48)" rx="2" ry="2" />
<text  x="496.04" y="111.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge (4 samples, 1.17%)</title><rect x="361.9" y="213" width="13.8" height="15.0" fill="rgb(237,64,23)" rx="2" ry="2" />
<text  x="364.93" y="223.5" ></text>
</g>
<g >
<title>kernel_poison_pages (1 samples, 0.29%)</title><rect x="448.2" y="165" width="3.4" height="15.0" fill="rgb(229,9,41)" rx="2" ry="2" />
<text  x="451.19" y="175.5" ></text>
</g>
<g >
<title>cgroup_post_fork (2 samples, 0.58%)</title><rect x="327.4" y="245" width="6.9" height="15.0" fill="rgb(237,195,16)" rx="2" ry="2" />
<text  x="330.43" y="255.5" ></text>
</g>
<g >
<title>__GI___wait4 (71 samples, 20.76%)</title><rect x="16.9" y="357" width="245.0" height="15.0" fill="rgb(219,110,4)" rx="2" ry="2" />
<text  x="19.90" y="367.5" >__GI___wait4</text>
</g>
<g >
<title>rcu_core (1 samples, 0.29%)</title><rect x="324.0" y="117" width="3.4" height="15.0" fill="rgb(211,50,21)" rx="2" ry="2" />
<text  x="326.98" y="127.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.29%)</title><rect x="527.5" y="245" width="3.5" height="15.0" fill="rgb(206,190,19)" rx="2" ry="2" />
<text  x="530.54" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.29%)</title><rect x="1162.4" y="309" width="3.4" height="15.0" fill="rgb(228,100,26)" rx="2" ry="2" />
<text  x="1165.40" y="319.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.29%)</title><rect x="51.4" y="229" width="3.5" height="15.0" fill="rgb(205,158,21)" rx="2" ry="2" />
<text  x="54.40" y="239.5" ></text>
</g>
<g >
<title>__mmap (1 samples, 0.29%)</title><rect x="1158.9" y="373" width="3.5" height="15.0" fill="rgb(251,24,46)" rx="2" ry="2" />
<text  x="1161.95" y="383.5" ></text>
</g>
<g >
<title>__schedule (47 samples, 13.74%)</title><rect x="54.9" y="229" width="162.1" height="15.0" fill="rgb(238,75,21)" rx="2" ry="2" />
<text  x="57.85" y="239.5" >__schedule</text>
</g>
<g >
<title>schedule (47 samples, 13.74%)</title><rect x="54.9" y="245" width="162.1" height="15.0" fill="rgb(221,186,43)" rx="2" ry="2" />
<text  x="57.85" y="255.5" >schedule</text>
</g>
<g >
<title>dup_task_struct (47 samples, 13.74%)</title><rect x="358.5" y="245" width="162.1" height="15.0" fill="rgb(245,211,38)" rx="2" ry="2" />
<text  x="361.48" y="255.5" >dup_task_struct</text>
</g>
<g >
<title>init_dl_task_timer (1 samples, 0.29%)</title><rect x="958.8" y="213" width="3.5" height="15.0" fill="rgb(209,74,34)" rx="2" ry="2" />
<text  x="961.83" y="223.5" ></text>
</g>
<g >
<title>finish_task_switch (47 samples, 13.74%)</title><rect x="54.9" y="213" width="162.1" height="15.0" fill="rgb(249,8,21)" rx="2" ry="2" />
<text  x="57.85" y="223.5" >finish_task_switch</text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.29%)</title><rect x="493.0" y="117" width="3.5" height="15.0" fill="rgb(247,75,35)" rx="2" ry="2" />
<text  x="496.04" y="127.5" ></text>
</g>
<g >
<title>alloc_pages_current (26 samples, 7.60%)</title><rect x="782.9" y="85" width="89.7" height="15.0" fill="rgb(226,47,2)" rx="2" ry="2" />
<text  x="785.87" y="95.5" >alloc_page..</text>
</g>
<g >
<title>cpu_cgroup_fork (1 samples, 0.29%)</title><rect x="330.9" y="229" width="3.4" height="15.0" fill="rgb(246,118,45)" rx="2" ry="2" />
<text  x="333.88" y="239.5" ></text>
</g>
<g >
<title>get_task_policy.part.0 (1 samples, 0.29%)</title><rect x="462.0" y="197" width="3.4" height="15.0" fill="rgb(224,161,34)" rx="2" ry="2" />
<text  x="464.99" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.88%)</title><rect x="406.8" y="213" width="10.3" height="15.0" fill="rgb(243,118,47)" rx="2" ry="2" />
<text  x="409.78" y="223.5" ></text>
</g>
<g >
<title>all (342 samples, 100%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(237,197,24)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.29%)</title><rect x="1158.9" y="261" width="3.5" height="15.0" fill="rgb(227,58,2)" rx="2" ry="2" />
<text  x="1161.95" y="271.5" ></text>
</g>
<g >
<title>perf_event_task_output (3 samples, 0.88%)</title><rect x="562.0" y="181" width="10.4" height="15.0" fill="rgb(240,153,51)" rx="2" ry="2" />
<text  x="565.05" y="191.5" ></text>
</g>
<g >
<title>__clone (259 samples, 75.73%)</title><rect x="261.9" y="357" width="893.6" height="15.0" fill="rgb(209,101,46)" rx="2" ry="2" />
<text  x="264.87" y="367.5" >__clone</text>
</g>
<g >
<title>__slab_free (1 samples, 0.29%)</title><rect x="324.0" y="37" width="3.4" height="15.0" fill="rgb(222,26,41)" rx="2" ry="2" />
<text  x="326.98" y="47.5" ></text>
</g>
<g >
<title>perf_event_alloc (1 samples, 0.29%)</title><rect x="951.9" y="213" width="3.5" height="15.0" fill="rgb(213,92,3)" rx="2" ry="2" />
<text  x="954.93" y="223.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.29%)</title><rect x="1162.4" y="277" width="3.4" height="15.0" fill="rgb(240,64,38)" rx="2" ry="2" />
<text  x="1165.40" y="287.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (3 samples, 0.88%)</title><rect x="375.7" y="213" width="10.4" height="15.0" fill="rgb(253,144,42)" rx="2" ry="2" />
<text  x="378.73" y="223.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.29%)</title><rect x="324.0" y="53" width="3.4" height="15.0" fill="rgb(218,197,44)" rx="2" ry="2" />
<text  x="326.98" y="63.5" ></text>
</g>
<g >
<title>pvclock_clocksource_read (1 samples, 0.29%)</title><rect x="1179.6" y="245" width="3.5" height="15.0" fill="rgb(241,209,0)" rx="2" ry="2" />
<text  x="1182.65" y="255.5" ></text>
</g>
<g >
<title>free_task (1 samples, 0.29%)</title><rect x="324.0" y="69" width="3.4" height="15.0" fill="rgb(250,163,24)" rx="2" ry="2" />
<text  x="326.98" y="79.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.29%)</title><rect x="330.9" y="213" width="3.4" height="15.0" fill="rgb(205,197,5)" rx="2" ry="2" />
<text  x="333.88" y="223.5" ></text>
</g>
<g >
<title>mmap64 (1 samples, 0.29%)</title><rect x="1186.5" y="373" width="3.5" height="15.0" fill="rgb(247,192,3)" rx="2" ry="2" />
<text  x="1189.55" y="383.5" ></text>
</g>
<g >
<title>hrtimer_init (1 samples, 0.29%)</title><rect x="524.1" y="245" width="3.4" height="15.0" fill="rgb(241,83,4)" rx="2" ry="2" />
<text  x="527.09" y="255.5" ></text>
</g>
<g >
<title>alloc_vmap_area (5 samples, 1.46%)</title><rect x="389.5" y="197" width="17.3" height="15.0" fill="rgb(228,164,20)" rx="2" ry="2" />
<text  x="392.53" y="207.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (1 samples, 0.29%)</title><rect x="1186.5" y="229" width="3.5" height="15.0" fill="rgb(215,178,3)" rx="2" ry="2" />
<text  x="1189.55" y="239.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.29%)</title><rect x="1158.9" y="277" width="3.5" height="15.0" fill="rgb(233,60,50)" rx="2" ry="2" />
<text  x="1161.95" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (258 samples, 75.44%)</title><rect x="265.3" y="325" width="890.2" height="15.0" fill="rgb(251,201,51)" rx="2" ry="2" />
<text  x="268.32" y="335.5" >do_syscall_64</text>
</g>
<g >
<title>sched_clock_local (1 samples, 0.29%)</title><rect x="568.9" y="133" width="3.5" height="15.0" fill="rgb(210,168,16)" rx="2" ry="2" />
<text  x="571.95" y="143.5" ></text>
</g>
<g >
<title>arch_dup_task_struct (2 samples, 0.58%)</title><rect x="310.2" y="245" width="6.9" height="15.0" fill="rgb(248,68,39)" rx="2" ry="2" />
<text  x="313.18" y="255.5" ></text>
</g>
<g >
<title>get_page_from_freelist (12 samples, 3.51%)</title><rect x="420.6" y="181" width="41.4" height="15.0" fill="rgb(230,68,21)" rx="2" ry="2" />
<text  x="423.58" y="191.5" >get..</text>
</g>
<g >
<title>cpu_clock_event_init (1 samples, 0.29%)</title><rect x="924.3" y="165" width="3.5" height="15.0" fill="rgb(245,50,33)" rx="2" ry="2" />
<text  x="927.33" y="175.5" ></text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.29%)</title><rect x="1162.4" y="245" width="3.4" height="15.0" fill="rgb(221,223,2)" rx="2" ry="2" />
<text  x="1165.40" y="255.5" ></text>
</g>
<g >
<title>main (1 samples, 0.29%)</title><rect x="1155.5" y="357" width="3.4" height="15.0" fill="rgb(253,116,36)" rx="2" ry="2" />
<text  x="1158.50" y="367.5" ></text>
</g>
<g >
<title>posix_get_realtime_timespec (1 samples, 0.29%)</title><rect x="1183.1" y="309" width="3.4" height="15.0" fill="rgb(234,57,4)" rx="2" ry="2" />
<text  x="1186.10" y="319.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (30 samples, 8.77%)</title><rect x="772.5" y="181" width="103.5" height="15.0" fill="rgb(231,127,38)" rx="2" ry="2" />
<text  x="775.51" y="191.5" >kmem_cache_a..</text>
</g>
<g >
<title>prep_new_page (1 samples, 0.29%)</title><rect x="865.7" y="37" width="3.4" height="15.0" fill="rgb(241,129,30)" rx="2" ry="2" />
<text  x="868.67" y="47.5" ></text>
</g>
<g >
<title>__get_vm_area_node (6 samples, 1.75%)</title><rect x="386.1" y="213" width="20.7" height="15.0" fill="rgb(246,74,44)" rx="2" ry="2" />
<text  x="389.08" y="223.5" ></text>
</g>
<g >
<title>kvm_clock_get_cycles (1 samples, 0.29%)</title><rect x="531.0" y="245" width="3.4" height="15.0" fill="rgb(224,2,1)" rx="2" ry="2" />
<text  x="533.99" y="255.5" ></text>
</g>
<g >
<title>__srcu_read_lock (1 samples, 0.29%)</title><rect x="769.1" y="181" width="3.4" height="15.0" fill="rgb(208,147,26)" rx="2" ry="2" />
<text  x="772.06" y="191.5" ></text>
</g>
<g >
<title>alloc_slab_page (4 samples, 1.17%)</title><rect x="482.7" y="149" width="13.8" height="15.0" fill="rgb(232,175,5)" rx="2" ry="2" />
<text  x="485.69" y="159.5" ></text>
</g>
<g >
<title>perf_event_fork (8 samples, 2.34%)</title><rect x="544.8" y="245" width="27.6" height="15.0" fill="rgb(243,176,20)" rx="2" ry="2" />
<text  x="547.80" y="255.5" >p..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.29%)</title><rect x="48.0" y="245" width="3.4" height="15.0" fill="rgb(249,206,23)" rx="2" ry="2" />
<text  x="50.95" y="255.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.29%)</title><rect x="1186.5" y="293" width="3.5" height="15.0" fill="rgb(219,100,3)" rx="2" ry="2" />
<text  x="1189.55" y="303.5" ></text>
</g>
<g >
<title>allocate_slab (30 samples, 8.77%)</title><rect x="772.5" y="117" width="103.5" height="15.0" fill="rgb(210,107,3)" rx="2" ry="2" />
<text  x="775.51" y="127.5" >allocate_slab</text>
</g>
<g >
<title>alloc_slab_page (26 samples, 7.60%)</title><rect x="782.9" y="101" width="89.7" height="15.0" fill="rgb(205,101,17)" rx="2" ry="2" />
<text  x="785.87" y="111.5" >alloc_slab..</text>
</g>
<g >
<title>memset_erms (3 samples, 0.88%)</title><rect x="510.3" y="229" width="10.3" height="15.0" fill="rgb(252,217,40)" rx="2" ry="2" />
<text  x="513.29" y="239.5" ></text>
</g>
<g >
<title>__lock_text_start (53 samples, 15.50%)</title><rect x="972.6" y="245" width="182.9" height="15.0" fill="rgb(244,82,50)" rx="2" ry="2" />
<text  x="975.63" y="255.5" >__lock_text_start</text>
</g>
<g >
<title>__alloc_pages_nodemask (13 samples, 3.80%)</title><rect x="417.1" y="197" width="44.9" height="15.0" fill="rgb(209,10,45)" rx="2" ry="2" />
<text  x="420.13" y="207.5" >__al..</text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.29%)</title><rect x="1162.4" y="261" width="3.4" height="15.0" fill="rgb(247,91,1)" rx="2" ry="2" />
<text  x="1165.40" y="271.5" ></text>
</g>
<g >
<title>find_vm_area (1 samples, 0.29%)</title><rect x="468.9" y="229" width="3.4" height="15.0" fill="rgb(219,93,32)" rx="2" ry="2" />
<text  x="471.89" y="239.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.29%)</title><rect x="962.3" y="261" width="3.4" height="15.0" fill="rgb(212,129,27)" rx="2" ry="2" />
<text  x="965.28" y="271.5" ></text>
</g>
<g >
<title>hrtimer_init (1 samples, 0.29%)</title><rect x="924.3" y="149" width="3.5" height="15.0" fill="rgb(230,90,17)" rx="2" ry="2" />
<text  x="927.33" y="159.5" ></text>
</g>
<g >
<title>get_common_indices.constprop.0 (1 samples, 0.29%)</title><rect x="13.5" y="357" width="3.4" height="15.0" fill="rgb(219,205,26)" rx="2" ry="2" />
<text  x="16.45" y="367.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.29%)</title><rect x="1162.4" y="293" width="3.4" height="15.0" fill="rgb(212,107,17)" rx="2" ry="2" />
<text  x="1165.40" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.29%)</title><rect x="386.1" y="197" width="3.4" height="15.0" fill="rgb(225,58,31)" rx="2" ry="2" />
<text  x="389.08" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.29%)</title><rect x="1186.5" y="325" width="3.5" height="15.0" fill="rgb(224,46,34)" rx="2" ry="2" />
<text  x="1189.55" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_init (1 samples, 0.29%)</title><rect x="958.8" y="181" width="3.5" height="15.0" fill="rgb(234,86,0)" rx="2" ry="2" />
<text  x="961.83" y="191.5" ></text>
</g>
<g >
<title>new_slab (5 samples, 1.46%)</title><rect x="479.2" y="181" width="17.3" height="15.0" fill="rgb(212,191,20)" rx="2" ry="2" />
<text  x="482.24" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 1.75%)</title><rect x="1165.8" y="325" width="20.7" height="15.0" fill="rgb(218,228,28)" rx="2" ry="2" />
<text  x="1168.85" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.29%)</title><rect x="1186.5" y="341" width="3.5" height="15.0" fill="rgb(233,157,14)" rx="2" ry="2" />
<text  x="1189.55" y="351.5" ></text>
</g>
<g >
<title>kvm_sched_clock_read (1 samples, 0.29%)</title><rect x="568.9" y="101" width="3.5" height="15.0" fill="rgb(229,146,13)" rx="2" ry="2" />
<text  x="571.95" y="111.5" ></text>
</g>
<g >
<title>__init_waitqueue_head (1 samples, 0.29%)</title><rect x="627.6" y="197" width="3.5" height="15.0" fill="rgb(228,48,33)" rx="2" ry="2" />
<text  x="630.60" y="207.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.29%)</title><rect x="324.0" y="133" width="3.4" height="15.0" fill="rgb(248,79,2)" rx="2" ry="2" />
<text  x="326.98" y="143.5" ></text>
</g>
<g >
<title>get_page_from_freelist (26 samples, 7.60%)</title><rect x="782.9" y="53" width="89.7" height="15.0" fill="rgb(206,107,48)" rx="2" ry="2" />
<text  x="785.87" y="63.5" >get_page_f..</text>
</g>
<g >
<title>__x64_sys_wait4 (65 samples, 19.01%)</title><rect x="37.6" y="309" width="224.3" height="15.0" fill="rgb(206,19,12)" rx="2" ry="2" />
<text  x="40.60" y="319.5" >__x64_sys_wait4</text>
</g>
<g >
<title>__x64_sys_clock_gettime (1 samples, 0.29%)</title><rect x="1179.6" y="309" width="3.5" height="15.0" fill="rgb(233,22,25)" rx="2" ry="2" />
<text  x="1182.65" y="319.5" ></text>
</g>
<g >
<title>memcpy_erms (2 samples, 0.58%)</title><rect x="503.4" y="229" width="6.9" height="15.0" fill="rgb(254,132,27)" rx="2" ry="2" />
<text  x="506.39" y="239.5" ></text>
</g>
<g >
<title>__do_sys_clone (257 samples, 75.15%)</title><rect x="268.8" y="293" width="886.7" height="15.0" fill="rgb(225,143,9)" rx="2" ry="2" />
<text  x="271.77" y="303.5" >__do_sys_clone</text>
</g>
<g >
<title>clear_page_erms (8 samples, 2.34%)</title><rect x="420.6" y="165" width="27.6" height="15.0" fill="rgb(249,173,30)" rx="2" ry="2" />
<text  x="423.58" y="175.5" >c..</text>
</g>
<g >
<title>put_task_struct_rcu_user (1 samples, 0.29%)</title><rect x="255.0" y="197" width="3.4" height="15.0" fill="rgb(228,121,47)" rx="2" ry="2" />
<text  x="257.97" y="207.5" ></text>
</g>
<g >
<title>__sched_fork (1 samples, 0.29%)</title><rect x="958.8" y="229" width="3.5" height="15.0" fill="rgb(216,13,2)" rx="2" ry="2" />
<text  x="961.83" y="239.5" ></text>
</g>
<g >
<title>__kmalloc (1 samples, 0.29%)</title><rect x="334.3" y="213" width="3.5" height="15.0" fill="rgb(208,187,50)" rx="2" ry="2" />
<text  x="337.33" y="223.5" ></text>
</g>
<g >
<title>__wmemchr_ifunc (1 samples, 0.29%)</title><rect x="10.0" y="325" width="3.5" height="15.0" fill="rgb(251,46,38)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>__mutex_init (4 samples, 1.17%)</title><rect x="669.0" y="197" width="13.8" height="15.0" fill="rgb(233,30,12)" rx="2" ry="2" />
<text  x="672.01" y="207.5" ></text>
</g>
<g >
<title>sched_fork (1 samples, 0.29%)</title><rect x="958.8" y="245" width="3.5" height="15.0" fill="rgb(250,101,17)" rx="2" ry="2" />
<text  x="961.83" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.29%)</title><rect x="306.7" y="229" width="3.5" height="15.0" fill="rgb(211,41,41)" rx="2" ry="2" />
<text  x="309.73" y="239.5" ></text>
</g>
<g >
<title>release_task (1 samples, 0.29%)</title><rect x="217.0" y="229" width="3.5" height="15.0" fill="rgb(231,130,0)" rx="2" ry="2" />
<text  x="220.02" y="239.5" ></text>
</g>
<g >
<title>alloc_pages_current (14 samples, 4.09%)</title><rect x="417.1" y="213" width="48.3" height="15.0" fill="rgb(245,152,14)" rx="2" ry="2" />
<text  x="420.13" y="223.5" >allo..</text>
</g>
<g >
<title>memset_erms (13 samples, 3.80%)</title><rect x="876.0" y="181" width="44.9" height="15.0" fill="rgb(249,149,6)" rx="2" ry="2" />
<text  x="879.02" y="191.5" >mems..</text>
</g>
<g >
<title>memset_erms (1 samples, 0.29%)</title><rect x="537.9" y="245" width="3.4" height="15.0" fill="rgb(216,8,29)" rx="2" ry="2" />
<text  x="540.89" y="255.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.29%)</title><rect x="1162.4" y="341" width="3.4" height="15.0" fill="rgb(210,130,28)" rx="2" ry="2" />
<text  x="1165.40" y="351.5" ></text>
</g>
<g >
<title>__do_sys_wait4 (65 samples, 19.01%)</title><rect x="37.6" y="293" width="224.3" height="15.0" fill="rgb(216,110,12)" rx="2" ry="2" />
<text  x="40.60" y="303.5" >__do_sys_wait4</text>
</g>
<g >
<title>__slab_alloc (30 samples, 8.77%)</title><rect x="772.5" y="165" width="103.5" height="15.0" fill="rgb(243,228,38)" rx="2" ry="2" />
<text  x="775.51" y="175.5" >__slab_alloc</text>
</g>
<g >
<title>_do_fork (257 samples, 75.15%)</title><rect x="268.8" y="277" width="886.7" height="15.0" fill="rgb(215,226,45)" rx="2" ry="2" />
<text  x="271.77" y="287.5" >_do_fork</text>
</g>
<g >
<title>arch_dup_task_struct (1 samples, 0.29%)</title><rect x="465.4" y="229" width="3.5" height="15.0" fill="rgb(249,148,51)" rx="2" ry="2" />
<text  x="468.44" y="239.5" ></text>
</g>
<g >
<title>copy_creds (2 samples, 0.58%)</title><rect x="334.3" y="245" width="6.9" height="15.0" fill="rgb(230,116,22)" rx="2" ry="2" />
<text  x="337.33" y="255.5" ></text>
</g>
<g >
<title>mutex_lock (4 samples, 1.17%)</title><rect x="682.8" y="197" width="13.8" height="15.0" fill="rgb(246,175,33)" rx="2" ry="2" />
<text  x="685.81" y="207.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.58%)</title><rect x="10.0" y="373" width="6.9" height="15.0" fill="rgb(250,147,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_wait4 (1 samples, 0.29%)</title><rect x="30.7" y="325" width="3.5" height="15.0" fill="rgb(253,200,18)" rx="2" ry="2" />
<text  x="33.70" y="335.5" ></text>
</g>
<g >
<title>perf_event_task (8 samples, 2.34%)</title><rect x="544.8" y="229" width="27.6" height="15.0" fill="rgb(218,127,36)" rx="2" ry="2" />
<text  x="547.80" y="239.5" >p..</text>
</g>
<g >
<title>perf_iterate_ctx (8 samples, 2.34%)</title><rect x="544.8" y="197" width="27.6" height="15.0" fill="rgb(253,227,15)" rx="2" ry="2" />
<text  x="547.80" y="207.5" >p..</text>
</g>
<g >
<title>perf_event_alloc (67 samples, 19.59%)</title><rect x="700.1" y="197" width="231.1" height="15.0" fill="rgb(240,182,26)" rx="2" ry="2" />
<text  x="703.06" y="207.5" >perf_event_alloc</text>
</g>
<g >
<title>mutex_lock (1 samples, 0.29%)</title><rect x="934.7" y="213" width="3.4" height="15.0" fill="rgb(236,7,0)" rx="2" ry="2" />
<text  x="937.68" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.29%)</title><rect x="1186.5" y="357" width="3.5" height="15.0" fill="rgb(205,45,16)" rx="2" ry="2" />
<text  x="1189.55" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.75%)</title><rect x="1165.8" y="341" width="20.7" height="15.0" fill="rgb(233,36,23)" rx="2" ry="2" />
<text  x="1168.85" y="351.5" ></text>
</g>
<g >
<title>page_counter_try_charge (4 samples, 1.17%)</title><rect x="361.9" y="197" width="13.8" height="15.0" fill="rgb(240,70,4)" rx="2" ry="2" />
<text  x="364.93" y="207.5" ></text>
</g>
<g >
<title>__percpu_down_read (1 samples, 0.29%)</title><rect x="286.0" y="245" width="3.5" height="15.0" fill="rgb(211,4,0)" rx="2" ry="2" />
<text  x="289.02" y="255.5" ></text>
</g>
<g >
<title>alloc_pid (4 samples, 1.17%)</title><rect x="296.4" y="245" width="13.8" height="15.0" fill="rgb(242,86,37)" rx="2" ry="2" />
<text  x="299.37" y="255.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.29%)</title><rect x="324.0" y="165" width="3.4" height="15.0" fill="rgb(236,50,10)" rx="2" ry="2" />
<text  x="326.98" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (258 samples, 75.44%)</title><rect x="265.3" y="341" width="890.2" height="15.0" fill="rgb(219,208,6)" rx="2" ry="2" />
<text  x="268.32" y="351.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>perf_try_init_event (2 samples, 0.58%)</title><rect x="920.9" y="181" width="6.9" height="15.0" fill="rgb(223,57,23)" rx="2" ry="2" />
<text  x="923.88" y="191.5" ></text>
</g>
<g >
<title>cgroup_can_fork (1 samples, 0.29%)</title><rect x="324.0" y="245" width="3.4" height="15.0" fill="rgb(225,132,51)" rx="2" ry="2" />
<text  x="326.98" y="255.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (2 samples, 0.58%)</title><rect x="496.5" y="213" width="6.9" height="15.0" fill="rgb(218,107,19)" rx="2" ry="2" />
<text  x="499.49" y="223.5" ></text>
</g>
<g >
<title>cgroup_fork (1 samples, 0.29%)</title><rect x="272.2" y="261" width="3.5" height="15.0" fill="rgb(207,200,4)" rx="2" ry="2" />
<text  x="275.22" y="271.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.29%)</title><rect x="324.0" y="149" width="3.4" height="15.0" fill="rgb(252,145,26)" rx="2" ry="2" />
<text  x="326.98" y="159.5" ></text>
</g>
<g >
<title>get_random_u32 (1 samples, 0.29%)</title><rect x="872.6" y="101" width="3.4" height="15.0" fill="rgb(241,42,54)" rx="2" ry="2" />
<text  x="875.57" y="111.5" ></text>
</g>
<g >
<title>thread_group_cputime_adjusted (1 samples, 0.29%)</title><rect x="258.4" y="213" width="3.5" height="15.0" fill="rgb(246,226,47)" rx="2" ry="2" />
<text  x="261.42" y="223.5" ></text>
</g>
<g >
<title>clear_page_erms (23 samples, 6.73%)</title><rect x="786.3" y="37" width="79.4" height="15.0" fill="rgb(236,157,17)" rx="2" ry="2" />
<text  x="789.32" y="47.5" >clear_pag..</text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.29%)</title><rect x="1158.9" y="245" width="3.5" height="15.0" fill="rgb(239,189,35)" rx="2" ry="2" />
<text  x="1161.95" y="255.5" ></text>
</g>
<g >
<title>ktime_get_real_ts64 (1 samples, 0.29%)</title><rect x="1179.6" y="277" width="3.5" height="15.0" fill="rgb(252,161,53)" rx="2" ry="2" />
<text  x="1182.65" y="287.5" ></text>
</g>
<g >
<title>__put_user_4 (1 samples, 0.29%)</title><rect x="37.6" y="277" width="3.5" height="15.0" fill="rgb(230,162,35)" rx="2" ry="2" />
<text  x="40.60" y="287.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.29%)</title><rect x="282.6" y="229" width="3.4" height="15.0" fill="rgb(247,103,22)" rx="2" ry="2" />
<text  x="285.57" y="239.5" ></text>
</g>
<g >
<title>new_slab (30 samples, 8.77%)</title><rect x="772.5" y="133" width="103.5" height="15.0" fill="rgb(210,83,48)" rx="2" ry="2" />
<text  x="775.51" y="143.5" >new_slab</text>
</g>
<g >
<title>_setjmp (1 samples, 0.29%)</title><rect x="1162.4" y="373" width="3.4" height="15.0" fill="rgb(249,1,25)" rx="2" ry="2" />
<text  x="1165.40" y="383.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.29%)</title><rect x="337.8" y="213" width="3.4" height="15.0" fill="rgb(206,224,26)" rx="2" ry="2" />
<text  x="340.78" y="223.5" ></text>
</g>
<g >
<title>__delayacct_tsk_init (2 samples, 0.58%)</title><rect x="279.1" y="245" width="6.9" height="15.0" fill="rgb(241,207,7)" rx="2" ry="2" />
<text  x="282.12" y="255.5" ></text>
</g>
<g >
<title>insert_vmap_area.constprop.0 (2 samples, 0.58%)</title><rect x="399.9" y="181" width="6.9" height="15.0" fill="rgb(233,139,2)" rx="2" ry="2" />
<text  x="402.88" y="191.5" ></text>
</g>
<g >
<title>my_clone (342 samples, 100.00%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(254,110,21)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >my_clone</text>
</g>
<g >
<title>mmap_region (1 samples, 0.29%)</title><rect x="1186.5" y="261" width="3.5" height="15.0" fill="rgb(251,138,15)" rx="2" ry="2" />
<text  x="1189.55" y="271.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.29%)</title><rect x="493.0" y="133" width="3.5" height="15.0" fill="rgb(243,204,35)" rx="2" ry="2" />
<text  x="496.04" y="143.5" ></text>
</g>
<g >
<title>__lock_text_start (11 samples, 3.22%)</title><rect x="631.1" y="197" width="37.9" height="15.0" fill="rgb(230,119,1)" rx="2" ry="2" />
<text  x="634.05" y="207.5" >__l..</text>
</g>
<g >
<title>__x64_sys_clone (257 samples, 75.15%)</title><rect x="268.8" y="309" width="886.7" height="15.0" fill="rgb(228,191,54)" rx="2" ry="2" />
<text  x="271.77" y="319.5" >__x64_sys_clone</text>
</g>
<g >
<title>__do_sys_wait4 (1 samples, 0.29%)</title><rect x="34.2" y="309" width="3.4" height="15.0" fill="rgb(209,146,14)" rx="2" ry="2" />
<text  x="37.15" y="319.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.29%)</title><rect x="955.4" y="245" width="3.4" height="15.0" fill="rgb(218,181,28)" rx="2" ry="2" />
<text  x="958.38" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.29%)</title><rect x="1158.9" y="357" width="3.5" height="15.0" fill="rgb(207,119,31)" rx="2" ry="2" />
<text  x="1161.95" y="367.5" ></text>
</g>
<g >
<title>__vmalloc_node_range (23 samples, 6.73%)</title><rect x="386.1" y="229" width="79.3" height="15.0" fill="rgb(224,107,51)" rx="2" ry="2" />
<text  x="389.08" y="239.5" >__vmalloc..</text>
</g>
<g >
<title>___slab_alloc (30 samples, 8.77%)</title><rect x="772.5" y="149" width="103.5" height="15.0" fill="rgb(245,111,23)" rx="2" ry="2" />
<text  x="775.51" y="159.5" >___slab_alloc</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.29%)</title><rect x="324.0" y="229" width="3.4" height="15.0" fill="rgb(244,201,22)" rx="2" ry="2" />
<text  x="326.98" y="239.5" ></text>
</g>
</g>
</svg>
