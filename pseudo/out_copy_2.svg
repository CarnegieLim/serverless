<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="470.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="453" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="453" > </text>
<g id="frames">
<g >
<title>asm_exc_page_fault (11 samples, 1.83%)</title><rect x="228.3" y="357" width="21.6" height="15.0" fill="rgb(241,129,36)" rx="2" ry="2" />
<text  x="231.30" y="367.5" >a..</text>
</g>
<g >
<title>rb_next (3 samples, 0.50%)</title><rect x="661.0" y="261" width="5.9" height="15.0" fill="rgb(229,103,34)" rx="2" ry="2" />
<text  x="663.97" y="271.5" ></text>
</g>
<g >
<title>pgd_alloc (7 samples, 1.17%)</title><rect x="954.0" y="229" width="13.8" height="15.0" fill="rgb(217,126,16)" rx="2" ry="2" />
<text  x="957.00" y="239.5" ></text>
</g>
<g >
<title>cgroup_css_set_put_fork (1 samples, 0.17%)</title><rect x="305.0" y="261" width="2.0" height="15.0" fill="rgb(246,168,19)" rx="2" ry="2" />
<text  x="308.00" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.33%)</title><rect x="246.0" y="309" width="3.9" height="15.0" fill="rgb(247,170,12)" rx="2" ry="2" />
<text  x="249.00" y="319.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.17%)</title><rect x="1174.3" y="213" width="1.9" height="15.0" fill="rgb(205,71,45)" rx="2" ry="2" />
<text  x="1177.27" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.17%)</title><rect x="1188.0" y="341" width="2.0" height="15.0" fill="rgb(233,129,47)" rx="2" ry="2" />
<text  x="1191.03" y="351.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (6 samples, 1.00%)</title><rect x="387.6" y="181" width="11.8" height="15.0" fill="rgb(205,136,3)" rx="2" ry="2" />
<text  x="390.60" y="191.5" ></text>
</g>
<g >
<title>__schedule (68 samples, 11.33%)</title><rect x="27.7" y="245" width="133.7" height="15.0" fill="rgb(222,178,31)" rx="2" ry="2" />
<text  x="30.70" y="255.5" >__schedule</text>
</g>
<g >
<title>mem_cgroup_charge (1 samples, 0.17%)</title><rect x="1131.0" y="245" width="2.0" height="15.0" fill="rgb(248,30,16)" rx="2" ry="2" />
<text  x="1134.00" y="255.5" ></text>
</g>
<g >
<title>local_clock (1 samples, 0.17%)</title><rect x="485.9" y="165" width="2.0" height="15.0" fill="rgb(254,110,15)" rx="2" ry="2" />
<text  x="488.93" y="175.5" ></text>
</g>
<g >
<title>hrtimer_init (1 samples, 0.17%)</title><rect x="670.8" y="213" width="2.0" height="15.0" fill="rgb(254,117,0)" rx="2" ry="2" />
<text  x="673.80" y="223.5" ></text>
</g>
<g >
<title>exc_page_fault (7 samples, 1.17%)</title><rect x="1174.3" y="357" width="13.7" height="15.0" fill="rgb(248,5,24)" rx="2" ry="2" />
<text  x="1177.27" y="367.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.17%)</title><rect x="956.0" y="133" width="1.9" height="15.0" fill="rgb(250,96,40)" rx="2" ry="2" />
<text  x="958.97" y="143.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.17%)</title><rect x="751.4" y="197" width="2.0" height="15.0" fill="rgb(218,15,0)" rx="2" ry="2" />
<text  x="754.43" y="207.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.17%)</title><rect x="320.7" y="245" width="2.0" height="15.0" fill="rgb(252,93,7)" rx="2" ry="2" />
<text  x="323.73" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_wait4 (101 samples, 16.83%)</title><rect x="23.8" y="325" width="198.6" height="15.0" fill="rgb(235,109,46)" rx="2" ry="2" />
<text  x="26.77" y="335.5" >__x64_sys_wait4</text>
</g>
<g >
<title>rmqueue (1 samples, 0.17%)</title><rect x="879.3" y="117" width="1.9" height="15.0" fill="rgb(246,46,24)" rx="2" ry="2" />
<text  x="882.27" y="127.5" ></text>
</g>
<g >
<title>copy_page_range (66 samples, 11.00%)</title><rect x="761.3" y="229" width="129.8" height="15.0" fill="rgb(236,177,41)" rx="2" ry="2" />
<text  x="764.27" y="239.5" >copy_page_range</text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.17%)</title><rect x="861.6" y="181" width="1.9" height="15.0" fill="rgb(213,27,54)" rx="2" ry="2" />
<text  x="864.57" y="191.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.33%)</title><rect x="686.5" y="181" width="4.0" height="15.0" fill="rgb(245,103,15)" rx="2" ry="2" />
<text  x="689.53" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.17%)</title><rect x="1188.0" y="357" width="2.0" height="15.0" fill="rgb(235,166,18)" rx="2" ry="2" />
<text  x="1191.03" y="367.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (10 samples, 1.67%)</title><rect x="1146.7" y="373" width="19.7" height="15.0" fill="rgb(242,13,44)" rx="2" ry="2" />
<text  x="1149.73" y="383.5" ></text>
</g>
<g >
<title>pre_handler_kretprobe (2 samples, 0.33%)</title><rect x="686.5" y="197" width="4.0" height="15.0" fill="rgb(253,111,8)" rx="2" ry="2" />
<text  x="689.53" y="207.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.17%)</title><rect x="218.5" y="165" width="1.9" height="15.0" fill="rgb(253,199,39)" rx="2" ry="2" />
<text  x="221.47" y="175.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.17%)</title><rect x="318.8" y="181" width="1.9" height="15.0" fill="rgb(230,71,11)" rx="2" ry="2" />
<text  x="321.77" y="191.5" ></text>
</g>
<g >
<title>alloc_pid (7 samples, 1.17%)</title><rect x="269.6" y="261" width="13.8" height="15.0" fill="rgb(250,48,6)" rx="2" ry="2" />
<text  x="272.60" y="271.5" ></text>
</g>
<g >
<title>thread_group_cputime (1 samples, 0.17%)</title><rect x="216.5" y="213" width="2.0" height="15.0" fill="rgb(224,51,51)" rx="2" ry="2" />
<text  x="219.50" y="223.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge (3 samples, 0.50%)</title><rect x="779.0" y="149" width="5.9" height="15.0" fill="rgb(236,14,43)" rx="2" ry="2" />
<text  x="781.97" y="159.5" ></text>
</g>
<g >
<title>__lock_text_start (50 samples, 8.33%)</title><rect x="993.3" y="261" width="98.4" height="15.0" fill="rgb(252,126,26)" rx="2" ry="2" />
<text  x="996.33" y="271.5" >__lock_text..</text>
</g>
<g >
<title>__get_free_pages (7 samples, 1.17%)</title><rect x="800.6" y="181" width="13.8" height="15.0" fill="rgb(252,133,28)" rx="2" ry="2" />
<text  x="803.60" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (4 samples, 0.67%)</title><rect x="1166.4" y="357" width="7.9" height="15.0" fill="rgb(217,218,36)" rx="2" ry="2" />
<text  x="1169.40" y="367.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (3 samples, 0.50%)</title><rect x="954.0" y="165" width="5.9" height="15.0" fill="rgb(219,125,36)" rx="2" ry="2" />
<text  x="957.00" y="175.5" ></text>
</g>
<g >
<title>call_rcu (1 samples, 0.17%)</title><rect x="214.5" y="197" width="2.0" height="15.0" fill="rgb(242,228,51)" rx="2" ry="2" />
<text  x="217.53" y="207.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.17%)</title><rect x="635.4" y="53" width="2.0" height="15.0" fill="rgb(244,216,39)" rx="2" ry="2" />
<text  x="638.40" y="63.5" ></text>
</g>
<g >
<title>copy_pte_range.isra.0 (35 samples, 5.83%)</title><rect x="822.2" y="213" width="68.9" height="15.0" fill="rgb(215,225,6)" rx="2" ry="2" />
<text  x="825.23" y="223.5" >copy_pt..</text>
</g>
<g >
<title>main (7 samples, 1.17%)</title><rect x="1174.3" y="389" width="13.7" height="15.0" fill="rgb(248,167,28)" rx="2" ry="2" />
<text  x="1177.27" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.17%)</title><rect x="1134.9" y="293" width="2.0" height="15.0" fill="rgb(214,180,16)" rx="2" ry="2" />
<text  x="1137.93" y="303.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (13 samples, 2.17%)</title><rect x="464.3" y="213" width="25.6" height="15.0" fill="rgb(221,133,54)" rx="2" ry="2" />
<text  x="467.30" y="223.5" >p..</text>
</g>
<g >
<title>do_wait (98 samples, 16.33%)</title><rect x="25.7" y="277" width="192.8" height="15.0" fill="rgb(248,159,16)" rx="2" ry="2" />
<text  x="28.73" y="287.5" >do_wait</text>
</g>
<g >
<title>wp_page_copy (6 samples, 1.00%)</title><rect x="1123.1" y="261" width="11.8" height="15.0" fill="rgb(224,145,35)" rx="2" ry="2" />
<text  x="1126.13" y="271.5" ></text>
</g>
<g >
<title>copy_thread_tls (1 samples, 0.17%)</title><rect x="332.5" y="261" width="2.0" height="15.0" fill="rgb(217,130,16)" rx="2" ry="2" />
<text  x="335.53" y="271.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (7 samples, 1.17%)</title><rect x="920.6" y="213" width="13.7" height="15.0" fill="rgb(222,28,22)" rx="2" ry="2" />
<text  x="923.57" y="223.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.33%)</title><rect x="682.6" y="117" width="3.9" height="15.0" fill="rgb(244,149,40)" rx="2" ry="2" />
<text  x="685.60" y="127.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.17%)</title><rect x="218.5" y="277" width="1.9" height="15.0" fill="rgb(243,90,54)" rx="2" ry="2" />
<text  x="221.47" y="287.5" ></text>
</g>
<g >
<title>_dl_addr (1 samples, 0.17%)</title><rect x="1140.8" y="389" width="2.0" height="15.0" fill="rgb(233,100,27)" rx="2" ry="2" />
<text  x="1143.83" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.17%)</title><rect x="1188.0" y="373" width="2.0" height="15.0" fill="rgb(242,162,24)" rx="2" ry="2" />
<text  x="1191.03" y="383.5" ></text>
</g>
<g >
<title>__mutex_init (1 samples, 0.17%)</title><rect x="586.2" y="197" width="2.0" height="15.0" fill="rgb(210,73,19)" rx="2" ry="2" />
<text  x="589.23" y="207.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.17%)</title><rect x="263.7" y="229" width="2.0" height="15.0" fill="rgb(210,134,46)" rx="2" ry="2" />
<text  x="266.70" y="239.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.50%)</title><rect x="1123.1" y="229" width="5.9" height="15.0" fill="rgb(240,130,30)" rx="2" ry="2" />
<text  x="1126.13" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.17%)</title><rect x="318.8" y="229" width="1.9" height="15.0" fill="rgb(232,71,26)" rx="2" ry="2" />
<text  x="321.77" y="239.5" ></text>
</g>
<g >
<title>alloc_slab_page (18 samples, 3.00%)</title><rect x="603.9" y="117" width="35.4" height="15.0" fill="rgb(234,68,24)" rx="2" ry="2" />
<text  x="606.93" y="127.5" >al..</text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.17%)</title><rect x="281.4" y="229" width="2.0" height="15.0" fill="rgb(214,132,20)" rx="2" ry="2" />
<text  x="284.40" y="239.5" ></text>
</g>
<g >
<title>get_page_from_freelist (4 samples, 0.67%)</title><rect x="959.9" y="165" width="7.9" height="15.0" fill="rgb(251,178,13)" rx="2" ry="2" />
<text  x="962.90" y="175.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.17%)</title><rect x="1174.3" y="229" width="1.9" height="15.0" fill="rgb(242,163,34)" rx="2" ry="2" />
<text  x="1177.27" y="239.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.33%)</title><rect x="356.1" y="229" width="4.0" height="15.0" fill="rgb(240,213,41)" rx="2" ry="2" />
<text  x="359.13" y="239.5" ></text>
</g>
<g >
<title>__do_sys_wait4 (100 samples, 16.67%)</title><rect x="23.8" y="309" width="196.6" height="15.0" fill="rgb(222,77,28)" rx="2" ry="2" />
<text  x="26.77" y="319.5" >__do_sys_wait4</text>
</g>
<g >
<title>kmem_cache_alloc_trace (24 samples, 4.00%)</title><rect x="592.1" y="197" width="47.2" height="15.0" fill="rgb(235,102,42)" rx="2" ry="2" />
<text  x="595.13" y="207.5" >kmem..</text>
</g>
<g >
<title>__get_free_pages (7 samples, 1.17%)</title><rect x="954.0" y="213" width="13.8" height="15.0" fill="rgb(210,192,43)" rx="2" ry="2" />
<text  x="957.00" y="223.5" ></text>
</g>
<g >
<title>trace_call_bpf (4 samples, 0.67%)</title><rect x="678.7" y="165" width="7.8" height="15.0" fill="rgb(219,0,10)" rx="2" ry="2" />
<text  x="681.67" y="175.5" ></text>
</g>
<g >
<title>_raw_spin_lock (6 samples, 1.00%)</title><rect x="387.6" y="197" width="11.8" height="15.0" fill="rgb(236,169,12)" rx="2" ry="2" />
<text  x="390.60" y="207.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.33%)</title><rect x="804.5" y="117" width="4.0" height="15.0" fill="rgb(237,150,46)" rx="2" ry="2" />
<text  x="807.53" y="127.5" ></text>
</g>
<g >
<title>kvm_clock_get_cycles (1 samples, 0.17%)</title><rect x="458.4" y="261" width="2.0" height="15.0" fill="rgb(221,48,45)" rx="2" ry="2" />
<text  x="461.40" y="271.5" ></text>
</g>
<g >
<title>__mutex_init (3 samples, 0.50%)</title><rect x="541.0" y="213" width="5.9" height="15.0" fill="rgb(243,176,31)" rx="2" ry="2" />
<text  x="544.00" y="223.5" ></text>
</g>
<g >
<title>get_task_policy.part.0 (1 samples, 0.17%)</title><rect x="812.4" y="149" width="2.0" height="15.0" fill="rgb(209,39,16)" rx="2" ry="2" />
<text  x="815.40" y="159.5" ></text>
</g>
<g >
<title>__libc_start_main (573 samples, 95.50%)</title><rect x="13.9" y="389" width="1126.9" height="15.0" fill="rgb(230,75,34)" rx="2" ry="2" />
<text  x="16.93" y="399.5" >__libc_start_main</text>
</g>
<g >
<title>mmap_region (1 samples, 0.17%)</title><rect x="1188.0" y="277" width="2.0" height="15.0" fill="rgb(253,176,25)" rx="2" ry="2" />
<text  x="1191.03" y="287.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.50%)</title><rect x="259.8" y="245" width="5.9" height="15.0" fill="rgb(223,65,42)" rx="2" ry="2" />
<text  x="262.77" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (5 samples, 0.83%)</title><rect x="438.7" y="245" width="9.9" height="15.0" fill="rgb(209,75,44)" rx="2" ry="2" />
<text  x="441.73" y="255.5" ></text>
</g>
<g >
<title>ptep_clear_flush (4 samples, 0.67%)</title><rect x="1180.2" y="261" width="7.8" height="15.0" fill="rgb(240,110,2)" rx="2" ry="2" />
<text  x="1183.17" y="271.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (7 samples, 1.17%)</title><rect x="1174.3" y="373" width="13.7" height="15.0" fill="rgb(222,98,5)" rx="2" ry="2" />
<text  x="1177.27" y="383.5" ></text>
</g>
<g >
<title>bpf_prog_210d9f0857618406_do_dup_mm_entry (4 samples, 0.67%)</title><rect x="678.7" y="149" width="7.8" height="15.0" fill="rgb(219,55,1)" rx="2" ry="2" />
<text  x="681.67" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.50%)</title><rect x="816.3" y="213" width="5.9" height="15.0" fill="rgb(253,188,24)" rx="2" ry="2" />
<text  x="819.33" y="223.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (6 samples, 1.00%)</title><rect x="800.6" y="149" width="11.8" height="15.0" fill="rgb(244,96,17)" rx="2" ry="2" />
<text  x="803.60" y="159.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.17%)</title><rect x="218.5" y="197" width="1.9" height="15.0" fill="rgb(227,214,40)" rx="2" ry="2" />
<text  x="221.47" y="207.5" ></text>
</g>
<g >
<title>switch_task_namespaces (1 samples, 0.17%)</title><rect x="1168.4" y="293" width="1.9" height="15.0" fill="rgb(220,79,0)" rx="2" ry="2" />
<text  x="1171.37" y="303.5" ></text>
</g>
<g >
<title>do_user_addr_fault (16 samples, 2.67%)</title><rect x="1105.4" y="325" width="31.5" height="15.0" fill="rgb(236,106,33)" rx="2" ry="2" />
<text  x="1108.43" y="335.5" >do..</text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.17%)</title><rect x="1174.3" y="261" width="1.9" height="15.0" fill="rgb(226,19,8)" rx="2" ry="2" />
<text  x="1177.27" y="271.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.17%)</title><rect x="318.8" y="101" width="1.9" height="15.0" fill="rgb(240,130,51)" rx="2" ry="2" />
<text  x="321.77" y="111.5" ></text>
</g>
<g >
<title>allocate_slab (20 samples, 3.33%)</title><rect x="600.0" y="133" width="39.3" height="15.0" fill="rgb(239,136,52)" rx="2" ry="2" />
<text  x="603.00" y="143.5" >all..</text>
</g>
<g >
<title>copy_page (1 samples, 0.17%)</title><rect x="1121.2" y="261" width="1.9" height="15.0" fill="rgb(230,109,33)" rx="2" ry="2" />
<text  x="1124.17" y="271.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.17%)</title><rect x="12.0" y="245" width="1.9" height="15.0" fill="rgb(228,191,40)" rx="2" ry="2" />
<text  x="14.97" y="255.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.17%)</title><rect x="1170.3" y="261" width="2.0" height="15.0" fill="rgb(210,193,46)" rx="2" ry="2" />
<text  x="1173.33" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.17%)</title><rect x="1131.0" y="197" width="2.0" height="15.0" fill="rgb(222,159,20)" rx="2" ry="2" />
<text  x="1134.00" y="207.5" ></text>
</g>
<g >
<title>exit_mmap (2 samples, 0.33%)</title><rect x="1170.3" y="293" width="4.0" height="15.0" fill="rgb(214,157,9)" rx="2" ry="2" />
<text  x="1173.33" y="303.5" ></text>
</g>
<g >
<title>wait_consider_task (29 samples, 4.83%)</title><rect x="161.4" y="261" width="57.1" height="15.0" fill="rgb(244,189,33)" rx="2" ry="2" />
<text  x="164.43" y="271.5" >wait_c..</text>
</g>
<g >
<title>get_zeroed_page (7 samples, 1.17%)</title><rect x="800.6" y="197" width="13.8" height="15.0" fill="rgb(218,98,49)" rx="2" ry="2" />
<text  x="803.60" y="207.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (1 samples, 0.17%)</title><rect x="1188.0" y="213" width="2.0" height="15.0" fill="rgb(208,158,3)" rx="2" ry="2" />
<text  x="1191.03" y="223.5" ></text>
</g>
<g >
<title>do_wp_page (8 samples, 1.33%)</title><rect x="1119.2" y="277" width="15.7" height="15.0" fill="rgb(210,202,18)" rx="2" ry="2" />
<text  x="1122.20" y="287.5" ></text>
</g>
<g >
<title>cgroup_release (3 samples, 0.50%)</title><rect x="206.7" y="213" width="5.9" height="15.0" fill="rgb(231,152,16)" rx="2" ry="2" />
<text  x="209.67" y="223.5" ></text>
</g>
<g >
<title>bpf_prog_210d9f0857618406_do_dup_mm_entry (2 samples, 0.33%)</title><rect x="674.7" y="165" width="4.0" height="15.0" fill="rgb(229,1,36)" rx="2" ry="2" />
<text  x="677.73" y="175.5" ></text>
</g>
<g >
<title>pids_can_fork (1 samples, 0.17%)</title><rect x="653.1" y="261" width="2.0" height="15.0" fill="rgb(251,78,34)" rx="2" ry="2" />
<text  x="656.10" y="271.5" ></text>
</g>
<g >
<title>dup_mm (142 samples, 23.67%)</title><rect x="692.4" y="261" width="279.3" height="15.0" fill="rgb(235,0,36)" rx="2" ry="2" />
<text  x="695.43" y="271.5" >dup_mm</text>
</g>
<g >
<title>get_page_from_freelist (4 samples, 0.67%)</title><rect x="804.5" y="133" width="7.9" height="15.0" fill="rgb(249,49,1)" rx="2" ry="2" />
<text  x="807.53" y="143.5" ></text>
</g>
<g >
<title>put_task_struct_rcu_user (2 samples, 0.33%)</title><rect x="212.6" y="213" width="3.9" height="15.0" fill="rgb(217,156,6)" rx="2" ry="2" />
<text  x="215.57" y="223.5" ></text>
</g>
<g >
<title>perf_event_init_task (83 samples, 13.83%)</title><rect x="489.9" y="261" width="163.2" height="15.0" fill="rgb(251,196,8)" rx="2" ry="2" />
<text  x="492.87" y="271.5" >perf_event_init_task</text>
</g>
<g >
<title>__clone (442 samples, 73.67%)</title><rect x="222.4" y="373" width="869.3" height="15.0" fill="rgb(244,65,8)" rx="2" ry="2" />
<text  x="225.40" y="383.5" >__clone</text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.17%)</title><rect x="360.1" y="229" width="1.9" height="15.0" fill="rgb(247,109,8)" rx="2" ry="2" />
<text  x="363.07" y="239.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.17%)</title><rect x="946.1" y="229" width="2.0" height="15.0" fill="rgb(233,151,18)" rx="2" ry="2" />
<text  x="949.13" y="239.5" ></text>
</g>
<g >
<title>memset_erms (3 samples, 0.50%)</title><rect x="639.3" y="197" width="5.9" height="15.0" fill="rgb(211,93,37)" rx="2" ry="2" />
<text  x="642.33" y="207.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.17%)</title><rect x="904.8" y="197" width="2.0" height="15.0" fill="rgb(254,51,9)" rx="2" ry="2" />
<text  x="907.83" y="207.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (1 samples, 0.17%)</title><rect x="487.9" y="149" width="2.0" height="15.0" fill="rgb(233,155,37)" rx="2" ry="2" />
<text  x="490.90" y="159.5" ></text>
</g>
<g >
<title>copy_namespaces (1 samples, 0.17%)</title><rect x="330.6" y="261" width="1.9" height="15.0" fill="rgb(238,54,11)" rx="2" ry="2" />
<text  x="333.57" y="271.5" ></text>
</g>
<g >
<title>___slab_alloc (20 samples, 3.33%)</title><rect x="600.0" y="165" width="39.3" height="15.0" fill="rgb(219,142,5)" rx="2" ry="2" />
<text  x="603.00" y="175.5" >___..</text>
</g>
<g >
<title>release_task (23 samples, 3.83%)</title><rect x="171.3" y="229" width="45.2" height="15.0" fill="rgb(210,17,16)" rx="2" ry="2" />
<text  x="174.27" y="239.5" >rele..</text>
</g>
<g >
<title>alloc_pages_current (11 samples, 1.83%)</title><rect x="779.0" y="197" width="21.6" height="15.0" fill="rgb(236,133,0)" rx="2" ry="2" />
<text  x="781.97" y="207.5" >a..</text>
</g>
<g >
<title>schedule (68 samples, 11.33%)</title><rect x="27.7" y="261" width="133.7" height="15.0" fill="rgb(210,71,29)" rx="2" ry="2" />
<text  x="30.70" y="271.5" >schedule</text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.17%)</title><rect x="218.5" y="213" width="1.9" height="15.0" fill="rgb(252,48,37)" rx="2" ry="2" />
<text  x="221.47" y="223.5" ></text>
</g>
<g >
<title>memcpy_erms (2 samples, 0.33%)</title><rect x="448.6" y="245" width="3.9" height="15.0" fill="rgb(228,191,51)" rx="2" ry="2" />
<text  x="451.57" y="255.5" ></text>
</g>
<g >
<title>anon_vma_interval_tree_insert (4 samples, 0.67%)</title><rect x="716.0" y="197" width="7.9" height="15.0" fill="rgb(219,29,25)" rx="2" ry="2" />
<text  x="719.03" y="207.5" ></text>
</g>
<g >
<title>new_slab (20 samples, 3.33%)</title><rect x="600.0" y="149" width="39.3" height="15.0" fill="rgb(235,184,26)" rx="2" ry="2" />
<text  x="603.00" y="159.5" >new..</text>
</g>
<g >
<title>kvm_sched_clock_read (1 samples, 0.17%)</title><rect x="485.9" y="101" width="2.0" height="15.0" fill="rgb(221,66,21)" rx="2" ry="2" />
<text  x="488.93" y="111.5" ></text>
</g>
<g >
<title>exc_page_fault (16 samples, 2.67%)</title><rect x="1105.4" y="341" width="31.5" height="15.0" fill="rgb(210,192,10)" rx="2" ry="2" />
<text  x="1108.43" y="351.5" >ex..</text>
</g>
<g >
<title>pvclock_clocksource_read (2 samples, 0.33%)</title><rect x="1162.5" y="261" width="3.9" height="15.0" fill="rgb(223,19,36)" rx="2" ry="2" />
<text  x="1165.47" y="271.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.17%)</title><rect x="1127.1" y="197" width="1.9" height="15.0" fill="rgb(206,12,28)" rx="2" ry="2" />
<text  x="1130.07" y="207.5" ></text>
</g>
<g >
<title>ftrace_ops_assist_func (10 samples, 1.67%)</title><rect x="672.8" y="245" width="19.6" height="15.0" fill="rgb(227,75,51)" rx="2" ry="2" />
<text  x="675.77" y="255.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (6 samples, 1.00%)</title><rect x="283.4" y="261" width="11.8" height="15.0" fill="rgb(207,205,0)" rx="2" ry="2" />
<text  x="286.37" y="271.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.17%)</title><rect x="485.9" y="149" width="2.0" height="15.0" fill="rgb(206,131,38)" rx="2" ry="2" />
<text  x="488.93" y="159.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (1 samples, 0.17%)</title><rect x="1172.3" y="229" width="2.0" height="15.0" fill="rgb(239,164,52)" rx="2" ry="2" />
<text  x="1175.30" y="239.5" ></text>
</g>
<g >
<title>page_counter_try_charge (2 samples, 0.33%)</title><rect x="780.9" y="133" width="4.0" height="15.0" fill="rgb(227,210,41)" rx="2" ry="2" />
<text  x="783.93" y="143.5" ></text>
</g>
<g >
<title>init_dl_task_timer (1 samples, 0.17%)</title><rect x="670.8" y="229" width="2.0" height="15.0" fill="rgb(238,25,32)" rx="2" ry="2" />
<text  x="673.80" y="239.5" ></text>
</g>
<g >
<title>clear_page_erms (4 samples, 0.67%)</title><rect x="959.9" y="149" width="7.9" height="15.0" fill="rgb(238,223,6)" rx="2" ry="2" />
<text  x="962.90" y="159.5" ></text>
</g>
<g >
<title>get_page_from_freelist (6 samples, 1.00%)</title><rect x="869.4" y="133" width="11.8" height="15.0" fill="rgb(254,223,21)" rx="2" ry="2" />
<text  x="872.43" y="143.5" ></text>
</g>
<g >
<title>cpu_cgroup_fork (1 samples, 0.17%)</title><rect x="334.5" y="261" width="2.0" height="15.0" fill="rgb(251,9,37)" rx="2" ry="2" />
<text  x="337.50" y="271.5" ></text>
</g>
<g >
<title>path_get (1 samples, 0.17%)</title><rect x="460.4" y="261" width="1.9" height="15.0" fill="rgb(231,35,2)" rx="2" ry="2" />
<text  x="463.37" y="271.5" ></text>
</g>
<g >
<title>__vmalloc_node_range (39 samples, 6.50%)</title><rect x="362.0" y="245" width="76.7" height="15.0" fill="rgb(237,56,13)" rx="2" ry="2" />
<text  x="365.03" y="255.5" >__vmallo..</text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.17%)</title><rect x="484.0" y="165" width="1.9" height="15.0" fill="rgb(238,180,49)" rx="2" ry="2" />
<text  x="486.97" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_clone (426 samples, 71.00%)</title><rect x="253.9" y="325" width="837.8" height="15.0" fill="rgb(218,14,42)" rx="2" ry="2" />
<text  x="256.87" y="335.5" >__x64_sys_clone</text>
</g>
<g >
<title>down_write (2 samples, 0.33%)</title><rect x="737.7" y="213" width="3.9" height="15.0" fill="rgb(213,108,39)" rx="2" ry="2" />
<text  x="740.67" y="223.5" ></text>
</g>
<g >
<title>vma_gap_callbacks_rotate (1 samples, 0.17%)</title><rect x="708.2" y="213" width="1.9" height="15.0" fill="rgb(224,94,53)" rx="2" ry="2" />
<text  x="711.17" y="223.5" ></text>
</g>
<g >
<title>pids_release (3 samples, 0.50%)</title><rect x="206.7" y="197" width="5.9" height="15.0" fill="rgb(205,74,12)" rx="2" ry="2" />
<text  x="209.67" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 1.17%)</title><rect x="1174.3" y="309" width="13.7" height="15.0" fill="rgb(249,141,47)" rx="2" ry="2" />
<text  x="1177.27" y="319.5" ></text>
</g>
<g >
<title>__perf_event__output_id_sample (1 samples, 0.17%)</title><rect x="484.0" y="181" width="1.9" height="15.0" fill="rgb(216,48,54)" rx="2" ry="2" />
<text  x="486.97" y="191.5" ></text>
</g>
<g >
<title>get_page_from_freelist (8 samples, 1.33%)</title><rect x="784.9" y="165" width="15.7" height="15.0" fill="rgb(250,106,33)" rx="2" ry="2" />
<text  x="787.87" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.67%)</title><rect x="1166.4" y="373" width="7.9" height="15.0" fill="rgb(241,155,48)" rx="2" ry="2" />
<text  x="1169.40" y="383.5" ></text>
</g>
<g >
<title>__anon_vma_interval_tree_augment_rotate (1 samples, 0.17%)</title><rect x="721.9" y="165" width="2.0" height="15.0" fill="rgb(249,219,49)" rx="2" ry="2" />
<text  x="724.93" y="175.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.17%)</title><rect x="1172.3" y="245" width="2.0" height="15.0" fill="rgb(228,119,37)" rx="2" ry="2" />
<text  x="1175.30" y="255.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.17%)</title><rect x="218.5" y="229" width="1.9" height="15.0" fill="rgb(228,202,3)" rx="2" ry="2" />
<text  x="221.47" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (2 samples, 0.33%)</title><rect x="407.3" y="197" width="3.9" height="15.0" fill="rgb(241,159,51)" rx="2" ry="2" />
<text  x="410.27" y="207.5" ></text>
</g>
<g >
<title>memset_erms (2 samples, 0.33%)</title><rect x="755.4" y="213" width="3.9" height="15.0" fill="rgb(243,129,54)" rx="2" ry="2" />
<text  x="758.37" y="223.5" ></text>
</g>
<g >
<title>exit_creds (1 samples, 0.17%)</title><rect x="318.8" y="53" width="1.9" height="15.0" fill="rgb(252,142,22)" rx="2" ry="2" />
<text  x="321.77" y="63.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 1.17%)</title><rect x="1152.6" y="341" width="13.8" height="15.0" fill="rgb(233,203,23)" rx="2" ry="2" />
<text  x="1155.63" y="351.5" ></text>
</g>
<g >
<title>kernel_wait4 (99 samples, 16.50%)</title><rect x="25.7" y="293" width="194.7" height="15.0" fill="rgb(229,18,20)" rx="2" ry="2" />
<text  x="28.73" y="303.5" >kernel_wait4</text>
</g>
<g >
<title>inherit_event.isra.0 (78 samples, 13.00%)</title><rect x="499.7" y="229" width="153.4" height="15.0" fill="rgb(217,44,49)" rx="2" ry="2" />
<text  x="502.70" y="239.5" >inherit_event.isra.0</text>
</g>
<g >
<title>ldt_dup_context (1 samples, 0.17%)</title><rect x="948.1" y="245" width="2.0" height="15.0" fill="rgb(209,52,5)" rx="2" ry="2" />
<text  x="951.10" y="255.5" ></text>
</g>
<g >
<title>alloc_pages_current (18 samples, 3.00%)</title><rect x="603.9" y="101" width="35.4" height="15.0" fill="rgb(221,169,18)" rx="2" ry="2" />
<text  x="606.93" y="111.5" >al..</text>
</g>
<g >
<title>cgroup_throttle_swaprate (1 samples, 0.17%)</title><rect x="1129.0" y="245" width="2.0" height="15.0" fill="rgb(213,71,54)" rx="2" ry="2" />
<text  x="1132.03" y="255.5" ></text>
</g>
<g >
<title>copy_process (213 samples, 35.50%)</title><rect x="253.9" y="277" width="418.9" height="15.0" fill="rgb(235,155,7)" rx="2" ry="2" />
<text  x="256.87" y="287.5" >copy_process</text>
</g>
<g >
<title>vmacache_find (1 samples, 0.17%)</title><rect x="244.0" y="293" width="2.0" height="15.0" fill="rgb(225,37,20)" rx="2" ry="2" />
<text  x="247.03" y="303.5" ></text>
</g>
<g >
<title>perf_event_task_output (3 samples, 0.50%)</title><rect x="484.0" y="197" width="5.9" height="15.0" fill="rgb(213,164,29)" rx="2" ry="2" />
<text  x="486.97" y="207.5" ></text>
</g>
<g >
<title>map_id_up (2 samples, 0.33%)</title><rect x="167.3" y="213" width="4.0" height="15.0" fill="rgb(205,146,34)" rx="2" ry="2" />
<text  x="170.33" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.17%)</title><rect x="218.5" y="261" width="1.9" height="15.0" fill="rgb(243,47,23)" rx="2" ry="2" />
<text  x="221.47" y="271.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.50%)</title><rect x="1123.1" y="245" width="5.9" height="15.0" fill="rgb(216,75,44)" rx="2" ry="2" />
<text  x="1126.13" y="255.5" ></text>
</g>
<g >
<title>alloc_perf_context (2 samples, 0.33%)</title><rect x="495.8" y="229" width="3.9" height="15.0" fill="rgb(254,138,50)" rx="2" ry="2" />
<text  x="498.77" y="239.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (3 samples, 0.50%)</title><rect x="275.5" y="229" width="5.9" height="15.0" fill="rgb(211,109,42)" rx="2" ry="2" />
<text  x="278.50" y="239.5" ></text>
</g>
<g >
<title>page_counter_try_charge (2 samples, 0.33%)</title><rect x="865.5" y="101" width="3.9" height="15.0" fill="rgb(221,7,19)" rx="2" ry="2" />
<text  x="868.50" y="111.5" ></text>
</g>
<g >
<title>clear_page_erms (3 samples, 0.50%)</title><rect x="873.4" y="117" width="5.9" height="15.0" fill="rgb(205,164,19)" rx="2" ry="2" />
<text  x="876.37" y="127.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.17%)</title><rect x="318.8" y="165" width="1.9" height="15.0" fill="rgb(214,21,39)" rx="2" ry="2" />
<text  x="321.77" y="175.5" ></text>
</g>
<g >
<title>__rb_insert_augmented (2 samples, 0.33%)</title><rect x="720.0" y="181" width="3.9" height="15.0" fill="rgb(247,22,36)" rx="2" ry="2" />
<text  x="722.97" y="191.5" ></text>
</g>
<g >
<title>__vma_link_rb (3 samples, 0.50%)</title><rect x="704.2" y="229" width="5.9" height="15.0" fill="rgb(223,144,6)" rx="2" ry="2" />
<text  x="707.23" y="239.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.17%)</title><rect x="808.5" y="117" width="1.9" height="15.0" fill="rgb(207,201,45)" rx="2" ry="2" />
<text  x="811.47" y="127.5" ></text>
</g>
<g >
<title>from_kuid_munged (2 samples, 0.33%)</title><rect x="167.3" y="229" width="4.0" height="15.0" fill="rgb(232,20,25)" rx="2" ry="2" />
<text  x="170.33" y="239.5" ></text>
</g>
<g >
<title>htab_map_update_elem (3 samples, 0.50%)</title><rect x="680.6" y="133" width="5.9" height="15.0" fill="rgb(226,187,48)" rx="2" ry="2" />
<text  x="683.63" y="143.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.17%)</title><rect x="318.8" y="197" width="1.9" height="15.0" fill="rgb(254,134,27)" rx="2" ry="2" />
<text  x="321.77" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_init (4 samples, 0.67%)</title><rect x="645.2" y="133" width="7.9" height="15.0" fill="rgb(235,18,49)" rx="2" ry="2" />
<text  x="648.23" y="143.5" ></text>
</g>
<g >
<title>__rb_insert_augmented (1 samples, 0.17%)</title><rect x="942.2" y="213" width="2.0" height="15.0" fill="rgb(236,215,32)" rx="2" ry="2" />
<text  x="945.20" y="223.5" ></text>
</g>
<g >
<title>__mod_memcg_state (1 samples, 0.17%)</title><rect x="1176.2" y="229" width="2.0" height="15.0" fill="rgb(226,10,3)" rx="2" ry="2" />
<text  x="1179.23" y="239.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.17%)</title><rect x="810.4" y="117" width="2.0" height="15.0" fill="rgb(229,161,53)" rx="2" ry="2" />
<text  x="813.43" y="127.5" ></text>
</g>
<g >
<title>perf_event_pid_type (1 samples, 0.17%)</title><rect x="487.9" y="165" width="2.0" height="15.0" fill="rgb(237,185,13)" rx="2" ry="2" />
<text  x="490.90" y="175.5" ></text>
</g>
<g >
<title>mprotect (1 samples, 0.17%)</title><rect x="12.0" y="341" width="1.9" height="15.0" fill="rgb(244,64,40)" rx="2" ry="2" />
<text  x="14.97" y="351.5" ></text>
</g>
<g >
<title>up_write (2 samples, 0.33%)</title><rect x="967.8" y="245" width="3.9" height="15.0" fill="rgb(228,176,51)" rx="2" ry="2" />
<text  x="970.77" y="255.5" ></text>
</g>
<g >
<title>policy_nodemask (1 samples, 0.17%)</title><rect x="881.2" y="149" width="2.0" height="15.0" fill="rgb(224,205,35)" rx="2" ry="2" />
<text  x="884.23" y="159.5" ></text>
</g>
<g >
<title>__sched_fork (1 samples, 0.17%)</title><rect x="670.8" y="245" width="2.0" height="15.0" fill="rgb(212,170,46)" rx="2" ry="2" />
<text  x="673.80" y="255.5" ></text>
</g>
<g >
<title>kvm_clock_get_cycles (2 samples, 0.33%)</title><rect x="1162.5" y="277" width="3.9" height="15.0" fill="rgb(241,99,27)" rx="2" ry="2" />
<text  x="1165.47" y="287.5" ></text>
</g>
<g >
<title>perf_try_init_event (4 samples, 0.67%)</title><rect x="645.2" y="197" width="7.9" height="15.0" fill="rgb(219,201,38)" rx="2" ry="2" />
<text  x="648.23" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (11 samples, 1.83%)</title><rect x="1115.3" y="309" width="21.6" height="15.0" fill="rgb(220,100,36)" rx="2" ry="2" />
<text  x="1118.27" y="319.5" >h..</text>
</g>
<g >
<title>up_write (1 samples, 0.17%)</title><rect x="759.3" y="213" width="2.0" height="15.0" fill="rgb(231,228,42)" rx="2" ry="2" />
<text  x="762.30" y="223.5" ></text>
</g>
<g >
<title>perf_iterate_sb (13 samples, 2.17%)</title><rect x="464.3" y="229" width="25.6" height="15.0" fill="rgb(228,179,24)" rx="2" ry="2" />
<text  x="467.30" y="239.5" >p..</text>
</g>
<g >
<title>dup_userfaultfd_complete (1 samples, 0.17%)</title><rect x="944.2" y="245" width="1.9" height="15.0" fill="rgb(234,115,48)" rx="2" ry="2" />
<text  x="947.17" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (7 samples, 1.17%)</title><rect x="1174.3" y="325" width="13.7" height="15.0" fill="rgb(221,177,46)" rx="2" ry="2" />
<text  x="1177.27" y="335.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.17%)</title><rect x="932.4" y="197" width="1.9" height="15.0" fill="rgb(238,217,26)" rx="2" ry="2" />
<text  x="935.37" y="207.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.33%)</title><rect x="666.9" y="245" width="3.9" height="15.0" fill="rgb(225,107,1)" rx="2" ry="2" />
<text  x="669.87" y="255.5" ></text>
</g>
<g >
<title>pre_handler_kretprobe (1 samples, 0.17%)</title><rect x="690.5" y="213" width="1.9" height="15.0" fill="rgb(210,101,22)" rx="2" ry="2" />
<text  x="693.47" y="223.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.33%)</title><rect x="800.6" y="101" width="3.9" height="15.0" fill="rgb(248,179,20)" rx="2" ry="2" />
<text  x="803.60" y="111.5" ></text>
</g>
<g >
<title>all (600 samples, 100%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(228,151,53)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>insert_vmap_area.constprop.0 (3 samples, 0.50%)</title><rect x="399.4" y="197" width="5.9" height="15.0" fill="rgb(239,35,46)" rx="2" ry="2" />
<text  x="402.40" y="207.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.17%)</title><rect x="446.6" y="229" width="2.0" height="15.0" fill="rgb(239,1,7)" rx="2" ry="2" />
<text  x="449.60" y="239.5" ></text>
</g>
<g >
<title>_do_fork (426 samples, 71.00%)</title><rect x="253.9" y="293" width="837.8" height="15.0" fill="rgb(248,60,18)" rx="2" ry="2" />
<text  x="256.87" y="303.5" >_do_fork</text>
</g>
<g >
<title>anon_vma_fork (26 samples, 4.33%)</title><rect x="710.1" y="229" width="51.2" height="15.0" fill="rgb(206,94,34)" rx="2" ry="2" />
<text  x="713.13" y="239.5" >anon_..</text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.17%)</title><rect x="1170.3" y="277" width="2.0" height="15.0" fill="rgb(243,143,22)" rx="2" ry="2" />
<text  x="1173.33" y="287.5" ></text>
</g>
<g >
<title>kretprobe_trampoline (153 samples, 25.50%)</title><rect x="692.4" y="277" width="300.9" height="15.0" fill="rgb(225,48,18)" rx="2" ry="2" />
<text  x="695.43" y="287.5" >kretprobe_trampoline</text>
</g>
<g >
<title>mprotect_fixup (1 samples, 0.17%)</title><rect x="12.0" y="261" width="1.9" height="15.0" fill="rgb(237,125,7)" rx="2" ry="2" />
<text  x="14.97" y="271.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.17%)</title><rect x="897.0" y="197" width="1.9" height="15.0" fill="rgb(208,18,41)" rx="2" ry="2" />
<text  x="899.97" y="207.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.17%)</title><rect x="946.1" y="245" width="2.0" height="15.0" fill="rgb(249,68,30)" rx="2" ry="2" />
<text  x="949.13" y="255.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.17%)</title><rect x="1131.0" y="229" width="2.0" height="15.0" fill="rgb(253,194,33)" rx="2" ry="2" />
<text  x="1134.00" y="239.5" ></text>
</g>
<g >
<title>prepare_creds (2 samples, 0.33%)</title><rect x="316.8" y="245" width="3.9" height="15.0" fill="rgb(248,29,23)" rx="2" ry="2" />
<text  x="319.80" y="255.5" ></text>
</g>
<g >
<title>mmap64 (1 samples, 0.17%)</title><rect x="1188.0" y="389" width="2.0" height="15.0" fill="rgb(237,211,7)" rx="2" ry="2" />
<text  x="1191.03" y="399.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.17%)</title><rect x="546.9" y="213" width="2.0" height="15.0" fill="rgb(213,102,36)" rx="2" ry="2" />
<text  x="549.90" y="223.5" ></text>
</g>
<g >
<title>__pmd_alloc (11 samples, 1.83%)</title><rect x="779.0" y="213" width="21.6" height="15.0" fill="rgb(222,82,44)" rx="2" ry="2" />
<text  x="781.97" y="223.5" >_..</text>
</g>
<g >
<title>acct_process (1 samples, 0.17%)</title><rect x="1166.4" y="309" width="2.0" height="15.0" fill="rgb(216,188,52)" rx="2" ry="2" />
<text  x="1169.40" y="319.5" ></text>
</g>
<g >
<title>pvclock_clocksource_read (1 samples, 0.17%)</title><rect x="485.9" y="85" width="2.0" height="15.0" fill="rgb(215,26,41)" rx="2" ry="2" />
<text  x="488.93" y="95.5" ></text>
</g>
<g >
<title>my_clone (600 samples, 100.00%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(229,81,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >my_clone</text>
</g>
<g >
<title>cpuset_fork (1 samples, 0.17%)</title><rect x="336.5" y="261" width="1.9" height="15.0" fill="rgb(219,141,28)" rx="2" ry="2" />
<text  x="339.47" y="271.5" ></text>
</g>
<g >
<title>exit_task_namespaces (1 samples, 0.17%)</title><rect x="1168.4" y="309" width="1.9" height="15.0" fill="rgb(208,122,4)" rx="2" ry="2" />
<text  x="1171.37" y="319.5" ></text>
</g>
<g >
<title>mntget (3 samples, 0.50%)</title><rect x="324.7" y="229" width="5.9" height="15.0" fill="rgb(254,115,30)" rx="2" ry="2" />
<text  x="327.67" y="239.5" ></text>
</g>
<g >
<title>__percpu_down_read (2 samples, 0.33%)</title><rect x="265.7" y="261" width="3.9" height="15.0" fill="rgb(249,50,1)" rx="2" ry="2" />
<text  x="268.67" y="271.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.17%)</title><rect x="452.5" y="245" width="2.0" height="15.0" fill="rgb(246,135,13)" rx="2" ry="2" />
<text  x="455.50" y="255.5" ></text>
</g>
<g >
<title>get_mm_exe_file (1 samples, 0.17%)</title><rect x="898.9" y="229" width="2.0" height="15.0" fill="rgb(235,225,24)" rx="2" ry="2" />
<text  x="901.93" y="239.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (1 samples, 0.17%)</title><rect x="161.4" y="245" width="2.0" height="15.0" fill="rgb(248,204,31)" rx="2" ry="2" />
<text  x="164.43" y="255.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.17%)</title><rect x="493.8" y="229" width="2.0" height="15.0" fill="rgb(241,156,6)" rx="2" ry="2" />
<text  x="496.80" y="239.5" ></text>
</g>
<g >
<title>alloc_pages_current (7 samples, 1.17%)</title><rect x="800.6" y="165" width="13.8" height="15.0" fill="rgb(224,168,16)" rx="2" ry="2" />
<text  x="803.60" y="175.5" ></text>
</g>
<g >
<title>security_vm_enough_memory_mm (2 samples, 0.33%)</title><rect x="902.9" y="229" width="3.9" height="15.0" fill="rgb(245,218,0)" rx="2" ry="2" />
<text  x="905.87" y="239.5" ></text>
</g>
<g >
<title>do_wp_page (7 samples, 1.17%)</title><rect x="1174.3" y="293" width="13.7" height="15.0" fill="rgb(243,7,44)" rx="2" ry="2" />
<text  x="1177.27" y="303.5" ></text>
</g>
<g >
<title>memset_erms (2 samples, 0.33%)</title><rect x="934.3" y="213" width="4.0" height="15.0" fill="rgb(227,214,21)" rx="2" ry="2" />
<text  x="937.33" y="223.5" ></text>
</g>
<g >
<title>rb_first (3 samples, 0.50%)</title><rect x="655.1" y="261" width="5.9" height="15.0" fill="rgb(240,0,19)" rx="2" ry="2" />
<text  x="658.07" y="271.5" ></text>
</g>
<g >
<title>dup_mm (10 samples, 1.67%)</title><rect x="672.8" y="277" width="19.6" height="15.0" fill="rgb(224,220,28)" rx="2" ry="2" />
<text  x="675.77" y="287.5" ></text>
</g>
<g >
<title>exc_page_fault (11 samples, 1.83%)</title><rect x="228.3" y="341" width="21.6" height="15.0" fill="rgb(243,187,30)" rx="2" ry="2" />
<text  x="231.30" y="351.5" >e..</text>
</g>
<g >
<title>vma_dup_policy (2 samples, 0.33%)</title><rect x="938.3" y="229" width="3.9" height="15.0" fill="rgb(228,176,47)" rx="2" ry="2" />
<text  x="941.27" y="239.5" ></text>
</g>
<g >
<title>get_task_policy.part.0 (2 samples, 0.33%)</title><rect x="432.8" y="213" width="4.0" height="15.0" fill="rgb(231,167,49)" rx="2" ry="2" />
<text  x="435.83" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.17%)</title><rect x="12.0" y="325" width="1.9" height="15.0" fill="rgb(225,124,17)" rx="2" ry="2" />
<text  x="14.97" y="335.5" ></text>
</g>
<g >
<title>pids_can_fork (3 samples, 0.50%)</title><rect x="299.1" y="245" width="5.9" height="15.0" fill="rgb(248,46,36)" rx="2" ry="2" />
<text  x="302.10" y="255.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.17%)</title><rect x="444.6" y="229" width="2.0" height="15.0" fill="rgb(241,157,50)" rx="2" ry="2" />
<text  x="447.63" y="239.5" ></text>
</g>
<g >
<title>get_page_from_freelist (9 samples, 1.50%)</title><rect x="415.1" y="197" width="17.7" height="15.0" fill="rgb(218,152,7)" rx="2" ry="2" />
<text  x="418.13" y="207.5" ></text>
</g>
<g >
<title>__do_sys_clone (426 samples, 71.00%)</title><rect x="253.9" y="309" width="837.8" height="15.0" fill="rgb(218,132,2)" rx="2" ry="2" />
<text  x="256.87" y="319.5" >__do_sys_clone</text>
</g>
<g >
<title>clear_page_erms (6 samples, 1.00%)</title><rect x="415.1" y="181" width="11.8" height="15.0" fill="rgb(240,86,28)" rx="2" ry="2" />
<text  x="418.13" y="191.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.17%)</title><rect x="218.5" y="149" width="1.9" height="15.0" fill="rgb(227,221,34)" rx="2" ry="2" />
<text  x="221.47" y="159.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.17%)</title><rect x="1188.0" y="245" width="2.0" height="15.0" fill="rgb(235,171,15)" rx="2" ry="2" />
<text  x="1191.03" y="255.5" ></text>
</g>
<g >
<title>task_active_pid_ns (1 samples, 0.17%)</title><rect x="1166.4" y="293" width="2.0" height="15.0" fill="rgb(209,66,44)" rx="2" ry="2" />
<text  x="1169.40" y="303.5" ></text>
</g>
<g >
<title>kprobe_dispatcher (6 samples, 1.00%)</title><rect x="674.7" y="197" width="11.8" height="15.0" fill="rgb(228,78,47)" rx="2" ry="2" />
<text  x="677.73" y="207.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.17%)</title><rect x="318.8" y="133" width="1.9" height="15.0" fill="rgb(239,97,46)" rx="2" ry="2" />
<text  x="321.77" y="143.5" ></text>
</g>
<g >
<title>perf_swevent_init_hrtimer (4 samples, 0.67%)</title><rect x="645.2" y="165" width="7.9" height="15.0" fill="rgb(227,220,44)" rx="2" ry="2" />
<text  x="648.23" y="175.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (1 samples, 0.17%)</title><rect x="12.0" y="277" width="1.9" height="15.0" fill="rgb(211,210,13)" rx="2" ry="2" />
<text  x="14.97" y="287.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.17%)</title><rect x="12.0" y="357" width="1.9" height="15.0" fill="rgb(242,118,43)" rx="2" ry="2" />
<text  x="14.97" y="367.5" ></text>
</g>
<g >
<title>rmqueue (3 samples, 0.50%)</title><rect x="426.9" y="181" width="5.9" height="15.0" fill="rgb(247,112,42)" rx="2" ry="2" />
<text  x="429.93" y="191.5" ></text>
</g>
<g >
<title>__pte_alloc (13 samples, 2.17%)</title><rect x="861.6" y="197" width="25.5" height="15.0" fill="rgb(234,79,48)" rx="2" ry="2" />
<text  x="864.57" y="207.5" >_..</text>
</g>
<g >
<title>main (23 samples, 3.83%)</title><rect x="1091.7" y="373" width="45.2" height="15.0" fill="rgb(245,20,38)" rx="2" ry="2" />
<text  x="1094.67" y="383.5" >main</text>
</g>
<g >
<title>do_user_addr_fault (11 samples, 1.83%)</title><rect x="228.3" y="325" width="21.6" height="15.0" fill="rgb(237,217,48)" rx="2" ry="2" />
<text  x="231.30" y="335.5" >d..</text>
</g>
<g >
<title>release_pages (1 samples, 0.17%)</title><rect x="1170.3" y="229" width="2.0" height="15.0" fill="rgb(225,151,11)" rx="2" ry="2" />
<text  x="1173.33" y="239.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.17%)</title><rect x="1170.3" y="245" width="2.0" height="15.0" fill="rgb(226,23,32)" rx="2" ry="2" />
<text  x="1173.33" y="255.5" ></text>
</g>
<g >
<title>exit_creds (1 samples, 0.17%)</title><rect x="218.5" y="101" width="1.9" height="15.0" fill="rgb(214,126,48)" rx="2" ry="2" />
<text  x="221.47" y="111.5" ></text>
</g>
<g >
<title>alloc_pages_current (13 samples, 2.17%)</title><rect x="411.2" y="229" width="25.6" height="15.0" fill="rgb(215,224,52)" rx="2" ry="2" />
<text  x="414.20" y="239.5" >a..</text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.17%)</title><rect x="1131.0" y="149" width="2.0" height="15.0" fill="rgb(213,86,51)" rx="2" ry="2" />
<text  x="1134.00" y="159.5" ></text>
</g>
<g >
<title>__vm_enough_memory (2 samples, 0.33%)</title><rect x="902.9" y="213" width="3.9" height="15.0" fill="rgb(208,82,5)" rx="2" ry="2" />
<text  x="905.87" y="223.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (3 samples, 0.50%)</title><rect x="863.5" y="133" width="5.9" height="15.0" fill="rgb(212,154,24)" rx="2" ry="2" />
<text  x="866.53" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (104 samples, 17.33%)</title><rect x="17.9" y="357" width="204.5" height="15.0" fill="rgb(253,3,24)" rx="2" ry="2" />
<text  x="20.87" y="367.5" >entry_SYSCALL_64_after_hwf..</text>
</g>
<g >
<title>do_syscall_64 (428 samples, 71.33%)</title><rect x="249.9" y="341" width="841.8" height="15.0" fill="rgb(226,174,53)" rx="2" ry="2" />
<text  x="252.93" y="351.5" >do_syscall_64</text>
</g>
<g >
<title>do_mmap (1 samples, 0.17%)</title><rect x="1188.0" y="293" width="2.0" height="15.0" fill="rgb(238,114,26)" rx="2" ry="2" />
<text  x="1191.03" y="303.5" ></text>
</g>
<g >
<title>pte_alloc_one (12 samples, 2.00%)</title><rect x="863.5" y="181" width="23.6" height="15.0" fill="rgb(231,96,47)" rx="2" ry="2" />
<text  x="866.53" y="191.5" >p..</text>
</g>
<g >
<title>kmem_cache_alloc_trace (2 samples, 0.33%)</title><rect x="495.8" y="213" width="3.9" height="15.0" fill="rgb(209,213,5)" rx="2" ry="2" />
<text  x="498.77" y="223.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (4 samples, 0.67%)</title><rect x="891.1" y="229" width="7.8" height="15.0" fill="rgb(227,171,9)" rx="2" ry="2" />
<text  x="894.07" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.17%)</title><rect x="12.0" y="309" width="1.9" height="15.0" fill="rgb(220,150,25)" rx="2" ry="2" />
<text  x="14.97" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.17%)</title><rect x="1131.0" y="213" width="2.0" height="15.0" fill="rgb(252,204,47)" rx="2" ry="2" />
<text  x="1134.00" y="223.5" ></text>
</g>
<g >
<title>dup_mmap (125 samples, 20.83%)</title><rect x="698.3" y="245" width="245.9" height="15.0" fill="rgb(249,209,41)" rx="2" ry="2" />
<text  x="701.33" y="255.5" >dup_mmap</text>
</g>
<g >
<title>perf_event_fork (14 samples, 2.33%)</title><rect x="462.3" y="261" width="27.6" height="15.0" fill="rgb(249,41,24)" rx="2" ry="2" />
<text  x="465.33" y="271.5" >p..</text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.17%)</title><rect x="1172.3" y="277" width="2.0" height="15.0" fill="rgb(242,227,7)" rx="2" ry="2" />
<text  x="1175.30" y="287.5" ></text>
</g>
<g >
<title>alloc_pages_current (7 samples, 1.17%)</title><rect x="954.0" y="197" width="13.8" height="15.0" fill="rgb(246,106,42)" rx="2" ry="2" />
<text  x="957.00" y="207.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (2 samples, 0.33%)</title><rect x="10.0" y="373" width="3.9" height="15.0" fill="rgb(205,28,52)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>__put_task_struct (1 samples, 0.17%)</title><rect x="218.5" y="117" width="1.9" height="15.0" fill="rgb(213,58,17)" rx="2" ry="2" />
<text  x="221.47" y="127.5" ></text>
</g>
<g >
<title>alloc_vmap_area (23 samples, 3.83%)</title><rect x="366.0" y="213" width="45.2" height="15.0" fill="rgb(218,100,22)" rx="2" ry="2" />
<text  x="368.97" y="223.5" >allo..</text>
</g>
<g >
<title>kmem_cache_alloc (6 samples, 1.00%)</title><rect x="741.6" y="213" width="11.8" height="15.0" fill="rgb(205,62,5)" rx="2" ry="2" />
<text  x="744.60" y="223.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.33%)</title><rect x="928.4" y="197" width="4.0" height="15.0" fill="rgb(223,26,46)" rx="2" ry="2" />
<text  x="931.43" y="207.5" ></text>
</g>
<g >
<title>do_exit (4 samples, 0.67%)</title><rect x="1166.4" y="325" width="7.9" height="15.0" fill="rgb(214,61,49)" rx="2" ry="2" />
<text  x="1169.40" y="335.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (16 samples, 2.67%)</title><rect x="1105.4" y="357" width="31.5" height="15.0" fill="rgb(245,39,0)" rx="2" ry="2" />
<text  x="1108.43" y="367.5" >as..</text>
</g>
<g >
<title>put_page (1 samples, 0.17%)</title><rect x="1133.0" y="245" width="1.9" height="15.0" fill="rgb(231,219,8)" rx="2" ry="2" />
<text  x="1135.97" y="255.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (1 samples, 0.17%)</title><rect x="1178.2" y="245" width="2.0" height="15.0" fill="rgb(236,50,23)" rx="2" ry="2" />
<text  x="1181.20" y="255.5" ></text>
</g>
<g >
<title>__handle_mm_fault (9 samples, 1.50%)</title><rect x="1117.2" y="293" width="17.7" height="15.0" fill="rgb(211,87,21)" rx="2" ry="2" />
<text  x="1120.23" y="303.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.33%)</title><rect x="1125.1" y="213" width="3.9" height="15.0" fill="rgb(235,152,35)" rx="2" ry="2" />
<text  x="1128.10" y="223.5" ></text>
</g>
<g >
<title>wp_page_copy (7 samples, 1.17%)</title><rect x="1174.3" y="277" width="13.7" height="15.0" fill="rgb(242,13,3)" rx="2" ry="2" />
<text  x="1177.27" y="287.5" ></text>
</g>
<g >
<title>insert_vmap_area_augment.constprop.0 (1 samples, 0.17%)</title><rect x="405.3" y="197" width="2.0" height="15.0" fill="rgb(233,128,24)" rx="2" ry="2" />
<text  x="408.30" y="207.5" ></text>
</g>
<g >
<title>sched_fork (3 samples, 0.50%)</title><rect x="666.9" y="261" width="5.9" height="15.0" fill="rgb(241,33,11)" rx="2" ry="2" />
<text  x="669.87" y="271.5" ></text>
</g>
<g >
<title>__pti_set_user_pgtbl (1 samples, 0.17%)</title><rect x="814.4" y="181" width="1.9" height="15.0" fill="rgb(220,49,28)" rx="2" ry="2" />
<text  x="817.37" y="191.5" ></text>
</g>
<g >
<title>hrtimer_init (4 samples, 0.67%)</title><rect x="645.2" y="149" width="7.9" height="15.0" fill="rgb(216,103,46)" rx="2" ry="2" />
<text  x="648.23" y="159.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.17%)</title><rect x="1172.3" y="261" width="2.0" height="15.0" fill="rgb(230,54,39)" rx="2" ry="2" />
<text  x="1175.30" y="271.5" ></text>
</g>
<g >
<title>cpumask_any_but (1 samples, 0.17%)</title><rect x="897.0" y="213" width="1.9" height="15.0" fill="rgb(210,217,20)" rx="2" ry="2" />
<text  x="899.97" y="223.5" ></text>
</g>
<g >
<title>__pud_alloc (8 samples, 1.33%)</title><rect x="800.6" y="213" width="15.7" height="15.0" fill="rgb(225,194,0)" rx="2" ry="2" />
<text  x="803.60" y="223.5" ></text>
</g>
<g >
<title>cpu_cgroup_fork (3 samples, 0.50%)</title><rect x="310.9" y="245" width="5.9" height="15.0" fill="rgb(211,216,49)" rx="2" ry="2" />
<text  x="313.90" y="255.5" ></text>
</g>
<g >
<title>kretprobe_hash_unlock (11 samples, 1.83%)</title><rect x="971.7" y="229" width="21.6" height="15.0" fill="rgb(211,1,31)" rx="2" ry="2" />
<text  x="974.70" y="239.5" >k..</text>
</g>
<g >
<title>aggr_pre_handler (9 samples, 1.50%)</title><rect x="672.8" y="213" width="17.7" height="15.0" fill="rgb(235,144,2)" rx="2" ry="2" />
<text  x="675.77" y="223.5" ></text>
</g>
<g >
<title>__delayacct_tsk_init (3 samples, 0.50%)</title><rect x="259.8" y="261" width="5.9" height="15.0" fill="rgb(215,200,54)" rx="2" ry="2" />
<text  x="262.77" y="271.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.33%)</title><rect x="454.5" y="261" width="3.9" height="15.0" fill="rgb(225,164,6)" rx="2" ry="2" />
<text  x="457.47" y="271.5" ></text>
</g>
<g >
<title>copy_fs_struct (5 samples, 0.83%)</title><rect x="320.7" y="261" width="9.9" height="15.0" fill="rgb(227,11,29)" rx="2" ry="2" />
<text  x="323.73" y="271.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.17%)</title><rect x="1174.3" y="245" width="1.9" height="15.0" fill="rgb(244,60,46)" rx="2" ry="2" />
<text  x="1177.27" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (9 samples, 1.50%)</title><rect x="863.5" y="149" width="17.7" height="15.0" fill="rgb(221,114,23)" rx="2" ry="2" />
<text  x="866.53" y="159.5" ></text>
</g>
<g >
<title>__put_task_struct (1 samples, 0.17%)</title><rect x="318.8" y="69" width="1.9" height="15.0" fill="rgb(252,193,6)" rx="2" ry="2" />
<text  x="321.77" y="79.5" ></text>
</g>
<g >
<title>ktime_get_real_ts64 (2 samples, 0.33%)</title><rect x="1162.5" y="293" width="3.9" height="15.0" fill="rgb(243,186,46)" rx="2" ry="2" />
<text  x="1165.47" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.17%)</title><rect x="218.5" y="245" width="1.9" height="15.0" fill="rgb(217,86,50)" rx="2" ry="2" />
<text  x="221.47" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 1.17%)</title><rect x="1152.6" y="357" width="13.8" height="15.0" fill="rgb(216,96,1)" rx="2" ry="2" />
<text  x="1155.63" y="367.5" ></text>
</g>
<g >
<title>copy_creds (2 samples, 0.33%)</title><rect x="316.8" y="261" width="3.9" height="15.0" fill="rgb(236,170,15)" rx="2" ry="2" />
<text  x="319.80" y="271.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.17%)</title><rect x="1188.0" y="325" width="2.0" height="15.0" fill="rgb(237,120,3)" rx="2" ry="2" />
<text  x="1191.03" y="335.5" ></text>
</g>
<g >
<title>kprobe_ftrace_handler (10 samples, 1.67%)</title><rect x="672.8" y="229" width="19.6" height="15.0" fill="rgb(219,30,28)" rx="2" ry="2" />
<text  x="675.77" y="239.5" ></text>
</g>
<g >
<title>posix_get_realtime_timespec (2 samples, 0.33%)</title><rect x="1162.5" y="309" width="3.9" height="15.0" fill="rgb(211,9,36)" rx="2" ry="2" />
<text  x="1165.47" y="319.5" ></text>
</g>
<g >
<title>lockref_get (1 samples, 0.17%)</title><rect x="322.7" y="229" width="2.0" height="15.0" fill="rgb(213,168,50)" rx="2" ry="2" />
<text  x="325.70" y="239.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.17%)</title><rect x="753.4" y="213" width="2.0" height="15.0" fill="rgb(234,175,0)" rx="2" ry="2" />
<text  x="756.40" y="223.5" ></text>
</g>
<g >
<title>clear_page_erms (15 samples, 2.50%)</title><rect x="603.9" y="53" width="29.5" height="15.0" fill="rgb(214,186,54)" rx="2" ry="2" />
<text  x="606.93" y="63.5" >cl..</text>
</g>
<g >
<title>perf_iterate_ctx (1 samples, 0.17%)</title><rect x="1188.0" y="229" width="2.0" height="15.0" fill="rgb(208,102,43)" rx="2" ry="2" />
<text  x="1191.03" y="239.5" ></text>
</g>
<g >
<title>perf_event_task_output (1 samples, 0.17%)</title><rect x="462.3" y="229" width="2.0" height="15.0" fill="rgb(205,5,45)" rx="2" ry="2" />
<text  x="465.33" y="239.5" ></text>
</g>
<g >
<title>__perf_event_header__init_id.isra.0 (2 samples, 0.33%)</title><rect x="485.9" y="181" width="4.0" height="15.0" fill="rgb(207,34,29)" rx="2" ry="2" />
<text  x="488.93" y="191.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.17%)</title><rect x="318.8" y="117" width="1.9" height="15.0" fill="rgb(217,55,32)" rx="2" ry="2" />
<text  x="321.77" y="127.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.17%)</title><rect x="900.9" y="229" width="2.0" height="15.0" fill="rgb(238,203,10)" rx="2" ry="2" />
<text  x="903.90" y="239.5" ></text>
</g>
<g >
<title>time_ns (2 samples, 0.33%)</title><rect x="1136.9" y="373" width="3.9" height="15.0" fill="rgb(234,41,10)" rx="2" ry="2" />
<text  x="1139.90" y="383.5" ></text>
</g>
<g >
<title>kprobe_perf_func (6 samples, 1.00%)</title><rect x="674.7" y="181" width="11.8" height="15.0" fill="rgb(236,169,38)" rx="2" ry="2" />
<text  x="677.73" y="191.5" ></text>
</g>
<g >
<title>do_group_exit (4 samples, 0.67%)</title><rect x="1166.4" y="341" width="7.9" height="15.0" fill="rgb(213,226,47)" rx="2" ry="2" />
<text  x="1169.40" y="351.5" ></text>
</g>
<g >
<title>finish_task_switch (68 samples, 11.33%)</title><rect x="27.7" y="229" width="133.7" height="15.0" fill="rgb(229,112,30)" rx="2" ry="2" />
<text  x="30.70" y="239.5" >finish_task_switch</text>
</g>
<g >
<title>mmput (2 samples, 0.33%)</title><rect x="1170.3" y="309" width="4.0" height="15.0" fill="rgb(225,186,36)" rx="2" ry="2" />
<text  x="1173.33" y="319.5" ></text>
</g>
<g >
<title>mm_init (9 samples, 1.50%)</title><rect x="950.1" y="245" width="17.7" height="15.0" fill="rgb(223,96,38)" rx="2" ry="2" />
<text  x="953.07" y="255.5" ></text>
</g>
<g >
<title>kernel_wait4 (1 samples, 0.17%)</title><rect x="220.4" y="309" width="2.0" height="15.0" fill="rgb(249,84,12)" rx="2" ry="2" />
<text  x="223.43" y="319.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (12 samples, 2.00%)</title><rect x="1142.8" y="389" width="23.6" height="15.0" fill="rgb(214,219,47)" rx="2" ry="2" />
<text  x="1145.80" y="399.5" >c..</text>
</g>
<g >
<title>ktime_get_mono_fast_ns (1 samples, 0.17%)</title><rect x="678.7" y="117" width="1.9" height="15.0" fill="rgb(226,188,33)" rx="2" ry="2" />
<text  x="681.67" y="127.5" ></text>
</g>
<g >
<title>native_set_p4d (1 samples, 0.17%)</title><rect x="814.4" y="197" width="1.9" height="15.0" fill="rgb(244,216,28)" rx="2" ry="2" />
<text  x="817.37" y="207.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.50%)</title><rect x="310.9" y="229" width="5.9" height="15.0" fill="rgb(224,14,3)" rx="2" ry="2" />
<text  x="313.90" y="239.5" ></text>
</g>
<g >
<title>do_user_addr_fault (7 samples, 1.17%)</title><rect x="1174.3" y="341" width="13.7" height="15.0" fill="rgb(212,130,47)" rx="2" ry="2" />
<text  x="1177.27" y="351.5" ></text>
</g>
<g >
<title>bpf_ktime_get_ns (1 samples, 0.17%)</title><rect x="678.7" y="133" width="1.9" height="15.0" fill="rgb(207,144,39)" rx="2" ry="2" />
<text  x="681.67" y="143.5" ></text>
</g>
<g >
<title>vm_area_dup (15 samples, 2.50%)</title><rect x="908.8" y="229" width="29.5" height="15.0" fill="rgb(215,169,43)" rx="2" ry="2" />
<text  x="911.77" y="239.5" >vm..</text>
</g>
<g >
<title>perf_event_alloc (46 samples, 7.67%)</title><rect x="562.6" y="213" width="90.5" height="15.0" fill="rgb(249,110,36)" rx="2" ry="2" />
<text  x="565.63" y="223.5" >perf_event..</text>
</g>
<g >
<title>page_add_new_anon_rmap (2 samples, 0.33%)</title><rect x="1176.2" y="261" width="4.0" height="15.0" fill="rgb(207,173,11)" rx="2" ry="2" />
<text  x="1179.23" y="271.5" ></text>
</g>
<g >
<title>wake_up_new_task (50 samples, 8.33%)</title><rect x="993.3" y="277" width="98.4" height="15.0" fill="rgb(253,51,11)" rx="2" ry="2" />
<text  x="996.33" y="287.5" >wake_up_new..</text>
</g>
<g >
<title>wait_task_zombie (28 samples, 4.67%)</title><rect x="163.4" y="245" width="55.1" height="15.0" fill="rgb(220,200,47)" rx="2" ry="2" />
<text  x="166.40" y="255.5" >wait_..</text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.17%)</title><rect x="735.7" y="197" width="2.0" height="15.0" fill="rgb(214,207,11)" rx="2" ry="2" />
<text  x="738.70" y="207.5" ></text>
</g>
<g >
<title>get_page_from_freelist (18 samples, 3.00%)</title><rect x="603.9" y="69" width="35.4" height="15.0" fill="rgb(209,162,37)" rx="2" ry="2" />
<text  x="606.93" y="79.5" >ge..</text>
</g>
<g >
<title>__lock_text_start (8 samples, 1.33%)</title><rect x="525.3" y="213" width="15.7" height="15.0" fill="rgb(223,175,24)" rx="2" ry="2" />
<text  x="528.27" y="223.5" ></text>
</g>
<g >
<title>vma_interval_tree_insert_after (1 samples, 0.17%)</title><rect x="942.2" y="229" width="2.0" height="15.0" fill="rgb(246,95,48)" rx="2" ry="2" />
<text  x="945.20" y="239.5" ></text>
</g>
<g >
<title>inherit_task_group.isra.0.part.0 (82 samples, 13.67%)</title><rect x="491.8" y="245" width="161.3" height="15.0" fill="rgb(246,169,15)" rx="2" ry="2" />
<text  x="494.83" y="255.5" >inherit_task_group.i..</text>
</g>
<g >
<title>cgroup_post_fork (5 samples, 0.83%)</title><rect x="307.0" y="261" width="9.8" height="15.0" fill="rgb(241,124,12)" rx="2" ry="2" />
<text  x="309.97" y="271.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.17%)</title><rect x="244.0" y="309" width="2.0" height="15.0" fill="rgb(236,207,15)" rx="2" ry="2" />
<text  x="247.03" y="319.5" ></text>
</g>
<g >
<title>__srcu_read_lock (2 samples, 0.33%)</title><rect x="588.2" y="197" width="3.9" height="15.0" fill="rgb(241,126,29)" rx="2" ry="2" />
<text  x="591.20" y="207.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.17%)</title><rect x="1188.0" y="309" width="2.0" height="15.0" fill="rgb(220,191,33)" rx="2" ry="2" />
<text  x="1191.03" y="319.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (2 samples, 0.33%)</title><rect x="800.6" y="133" width="3.9" height="15.0" fill="rgb(237,121,22)" rx="2" ry="2" />
<text  x="803.60" y="143.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (6 samples, 1.00%)</title><rect x="350.2" y="245" width="11.8" height="15.0" fill="rgb(239,138,24)" rx="2" ry="2" />
<text  x="353.23" y="255.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.17%)</title><rect x="957.9" y="149" width="2.0" height="15.0" fill="rgb(227,94,15)" rx="2" ry="2" />
<text  x="960.93" y="159.5" ></text>
</g>
<g >
<title>perf_event_task (14 samples, 2.33%)</title><rect x="462.3" y="245" width="27.6" height="15.0" fill="rgb(214,65,34)" rx="2" ry="2" />
<text  x="465.33" y="255.5" >p..</text>
</g>
<g >
<title>vm_normal_page (2 samples, 0.33%)</title><rect x="887.1" y="197" width="4.0" height="15.0" fill="rgb(206,217,3)" rx="2" ry="2" />
<text  x="890.13" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_init (1 samples, 0.17%)</title><rect x="670.8" y="197" width="2.0" height="15.0" fill="rgb(211,5,46)" rx="2" ry="2" />
<text  x="673.80" y="207.5" ></text>
</g>
<g >
<title>__slab_alloc (21 samples, 3.50%)</title><rect x="598.0" y="181" width="41.3" height="15.0" fill="rgb(244,130,17)" rx="2" ry="2" />
<text  x="601.03" y="191.5" >__s..</text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.17%)</title><rect x="1131.0" y="181" width="2.0" height="15.0" fill="rgb(253,190,28)" rx="2" ry="2" />
<text  x="1134.00" y="191.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (11 samples, 1.83%)</title><rect x="779.0" y="181" width="21.6" height="15.0" fill="rgb(237,219,52)" rx="2" ry="2" />
<text  x="781.97" y="191.5" >_..</text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.17%)</title><rect x="1170.3" y="213" width="2.0" height="15.0" fill="rgb(245,168,28)" rx="2" ry="2" />
<text  x="1173.33" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (103 samples, 17.17%)</title><rect x="19.8" y="341" width="202.6" height="15.0" fill="rgb(241,149,26)" rx="2" ry="2" />
<text  x="22.83" y="351.5" >do_syscall_64</text>
</g>
<g >
<title>kretprobe_trampoline (11 samples, 1.83%)</title><rect x="971.7" y="261" width="21.6" height="15.0" fill="rgb(238,214,43)" rx="2" ry="2" />
<text  x="974.70" y="271.5" >k..</text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.17%)</title><rect x="672.8" y="197" width="1.9" height="15.0" fill="rgb(219,178,30)" rx="2" ry="2" />
<text  x="675.77" y="207.5" ></text>
</g>
<g >
<title>prep_compound_page (1 samples, 0.17%)</title><rect x="635.4" y="37" width="2.0" height="15.0" fill="rgb(229,126,6)" rx="2" ry="2" />
<text  x="638.40" y="47.5" ></text>
</g>
<g >
<title>ktime_get_real_ts64 (1 samples, 0.17%)</title><rect x="1160.5" y="309" width="2.0" height="15.0" fill="rgb(248,35,5)" rx="2" ry="2" />
<text  x="1163.50" y="319.5" ></text>
</g>
<g >
<title>__GI___wait4 (106 samples, 17.67%)</title><rect x="13.9" y="373" width="208.5" height="15.0" fill="rgb(248,8,52)" rx="2" ry="2" />
<text  x="16.93" y="383.5" >__GI___wait4</text>
</g>
<g >
<title>delayed_put_task_struct (1 samples, 0.17%)</title><rect x="218.5" y="133" width="1.9" height="15.0" fill="rgb(219,4,19)" rx="2" ry="2" />
<text  x="221.47" y="143.5" ></text>
</g>
<g >
<title>trampoline_handler (11 samples, 1.83%)</title><rect x="971.7" y="245" width="21.6" height="15.0" fill="rgb(219,175,8)" rx="2" ry="2" />
<text  x="974.70" y="255.5" >t..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.67%)</title><rect x="1166.4" y="389" width="7.9" height="15.0" fill="rgb(243,53,24)" rx="2" ry="2" />
<text  x="1169.40" y="399.5" ></text>
</g>
<g >
<title>map_kernel_range_noflush (1 samples, 0.17%)</title><rect x="436.8" y="229" width="1.9" height="15.0" fill="rgb(220,175,8)" rx="2" ry="2" />
<text  x="439.77" y="239.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.17%)</title><rect x="1131.0" y="133" width="2.0" height="15.0" fill="rgb(206,108,42)" rx="2" ry="2" />
<text  x="1134.00" y="143.5" ></text>
</g>
<g >
<title>prep_compound_page (1 samples, 0.17%)</title><rect x="633.4" y="53" width="2.0" height="15.0" fill="rgb(244,206,31)" rx="2" ry="2" />
<text  x="636.43" y="63.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (428 samples, 71.33%)</title><rect x="249.9" y="357" width="841.8" height="15.0" fill="rgb(249,220,27)" rx="2" ry="2" />
<text  x="252.93" y="367.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>thread_group_cputime_adjusted (1 samples, 0.17%)</title><rect x="216.5" y="229" width="2.0" height="15.0" fill="rgb(240,211,20)" rx="2" ry="2" />
<text  x="219.50" y="239.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.17%)</title><rect x="1125.1" y="197" width="2.0" height="15.0" fill="rgb(221,147,3)" rx="2" ry="2" />
<text  x="1128.10" y="207.5" ></text>
</g>
<g >
<title>dup_fd (5 samples, 0.83%)</title><rect x="338.4" y="261" width="9.9" height="15.0" fill="rgb(233,85,45)" rx="2" ry="2" />
<text  x="341.43" y="271.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.17%)</title><rect x="637.4" y="53" width="1.9" height="15.0" fill="rgb(217,125,44)" rx="2" ry="2" />
<text  x="640.37" y="63.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (3 samples, 0.50%)</title><rect x="1160.5" y="325" width="5.9" height="15.0" fill="rgb(205,39,47)" rx="2" ry="2" />
<text  x="1163.50" y="335.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.17%)</title><rect x="1176.2" y="245" width="2.0" height="15.0" fill="rgb(250,7,35)" rx="2" ry="2" />
<text  x="1179.23" y="255.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge (2 samples, 0.33%)</title><rect x="954.0" y="149" width="3.9" height="15.0" fill="rgb(245,14,43)" rx="2" ry="2" />
<text  x="957.00" y="159.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (1 samples, 0.17%)</title><rect x="12.0" y="229" width="1.9" height="15.0" fill="rgb(230,96,39)" rx="2" ry="2" />
<text  x="14.97" y="239.5" ></text>
</g>
<g >
<title>cpumask_any_but (1 samples, 0.17%)</title><rect x="1186.1" y="229" width="1.9" height="15.0" fill="rgb(221,34,0)" rx="2" ry="2" />
<text  x="1189.07" y="239.5" ></text>
</g>
<g >
<title>up_write (1 samples, 0.17%)</title><rect x="906.8" y="229" width="2.0" height="15.0" fill="rgb(243,39,48)" rx="2" ry="2" />
<text  x="909.80" y="239.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.33%)</title><rect x="10.0" y="389" width="3.9" height="15.0" fill="rgb(208,198,17)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (18 samples, 3.00%)</title><rect x="603.9" y="85" width="35.4" height="15.0" fill="rgb(216,25,1)" rx="2" ry="2" />
<text  x="606.93" y="95.5" >__..</text>
</g>
<g >
<title>__x64_sys_wait4 (1 samples, 0.17%)</title><rect x="17.9" y="341" width="1.9" height="15.0" fill="rgb(233,221,30)" rx="2" ry="2" />
<text  x="20.87" y="351.5" ></text>
</g>
<g >
<title>delayed_put_task_struct (1 samples, 0.17%)</title><rect x="318.8" y="85" width="1.9" height="15.0" fill="rgb(234,189,20)" rx="2" ry="2" />
<text  x="321.77" y="95.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.17%)</title><rect x="1188.0" y="261" width="2.0" height="15.0" fill="rgb(252,64,45)" rx="2" ry="2" />
<text  x="1191.03" y="271.5" ></text>
</g>
<g >
<title>clear_page_erms (7 samples, 1.17%)</title><rect x="786.8" y="149" width="13.8" height="15.0" fill="rgb(250,95,46)" rx="2" ry="2" />
<text  x="789.83" y="159.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.17%)</title><rect x="346.3" y="245" width="2.0" height="15.0" fill="rgb(212,226,28)" rx="2" ry="2" />
<text  x="349.30" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (7 samples, 1.17%)</title><rect x="954.0" y="181" width="13.8" height="15.0" fill="rgb(220,57,40)" rx="2" ry="2" />
<text  x="957.00" y="191.5" ></text>
</g>
<g >
<title>audit_alloc (1 samples, 0.17%)</title><rect x="295.2" y="261" width="1.9" height="15.0" fill="rgb(242,192,25)" rx="2" ry="2" />
<text  x="298.17" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 1.67%)</title><rect x="672.8" y="261" width="19.6" height="15.0" fill="rgb(218,58,27)" rx="2" ry="2" />
<text  x="675.77" y="271.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.17%)</title><rect x="218.5" y="181" width="1.9" height="15.0" fill="rgb(245,173,47)" rx="2" ry="2" />
<text  x="221.47" y="191.5" ></text>
</g>
<g >
<title>mutex_lock (7 samples, 1.17%)</title><rect x="548.9" y="213" width="13.7" height="15.0" fill="rgb(235,15,11)" rx="2" ry="2" />
<text  x="551.87" y="223.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (3 samples, 0.50%)</title><rect x="779.0" y="165" width="5.9" height="15.0" fill="rgb(238,177,35)" rx="2" ry="2" />
<text  x="781.97" y="175.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (4 samples, 0.67%)</title><rect x="275.5" y="245" width="7.9" height="15.0" fill="rgb(219,124,28)" rx="2" ry="2" />
<text  x="278.50" y="255.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.17%)</title><rect x="485.9" y="117" width="2.0" height="15.0" fill="rgb(241,210,53)" rx="2" ry="2" />
<text  x="488.93" y="127.5" ></text>
</g>
<g >
<title>anon_vma_clone (14 samples, 2.33%)</title><rect x="710.1" y="213" width="27.6" height="15.0" fill="rgb(245,95,47)" rx="2" ry="2" />
<text  x="713.13" y="223.5" >a..</text>
</g>
<g >
<title>cgroup_can_fork (4 samples, 0.67%)</title><rect x="297.1" y="261" width="7.9" height="15.0" fill="rgb(205,215,40)" rx="2" ry="2" />
<text  x="300.13" y="271.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.17%)</title><rect x="344.3" y="245" width="2.0" height="15.0" fill="rgb(211,184,24)" rx="2" ry="2" />
<text  x="347.33" y="255.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.17%)</title><rect x="318.8" y="149" width="1.9" height="15.0" fill="rgb(223,71,34)" rx="2" ry="2" />
<text  x="321.77" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (1 samples, 0.17%)</title><rect x="12.0" y="293" width="1.9" height="15.0" fill="rgb(230,55,52)" rx="2" ry="2" />
<text  x="14.97" y="303.5" ></text>
</g>
<g >
<title>cpu_clock_event_init (4 samples, 0.67%)</title><rect x="645.2" y="181" width="7.9" height="15.0" fill="rgb(247,228,46)" rx="2" ry="2" />
<text  x="648.23" y="191.5" ></text>
</g>
<g >
<title>__rb_insert_augmented (1 samples, 0.17%)</title><rect x="405.3" y="181" width="2.0" height="15.0" fill="rgb(231,149,1)" rx="2" ry="2" />
<text  x="408.30" y="191.5" ></text>
</g>
<g >
<title>dup_task_struct (54 samples, 9.00%)</title><rect x="348.3" y="261" width="106.2" height="15.0" fill="rgb(229,0,12)" rx="2" ry="2" />
<text  x="351.27" y="271.5" >dup_task_str..</text>
</g>
<g >
<title>__memcg_kmem_charge (2 samples, 0.33%)</title><rect x="352.2" y="229" width="3.9" height="15.0" fill="rgb(219,151,34)" rx="2" ry="2" />
<text  x="355.20" y="239.5" ></text>
</g>
<g >
<title>__lock_text_start (11 samples, 1.83%)</title><rect x="971.7" y="213" width="21.6" height="15.0" fill="rgb(229,160,48)" rx="2" ry="2" />
<text  x="974.70" y="223.5" >_..</text>
</g>
<g >
<title>flush_tlb_mm_range (4 samples, 0.67%)</title><rect x="1180.2" y="245" width="7.8" height="15.0" fill="rgb(207,193,29)" rx="2" ry="2" />
<text  x="1183.17" y="255.5" ></text>
</g>
<g >
<title>alloc_pages_current (10 samples, 1.67%)</title><rect x="863.5" y="165" width="19.7" height="15.0" fill="rgb(253,36,43)" rx="2" ry="2" />
<text  x="866.53" y="175.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge (2 samples, 0.33%)</title><rect x="800.6" y="117" width="3.9" height="15.0" fill="rgb(231,13,39)" rx="2" ry="2" />
<text  x="803.60" y="127.5" ></text>
</g>
<g >
<title>__get_vm_area_node (23 samples, 3.83%)</title><rect x="366.0" y="229" width="45.2" height="15.0" fill="rgb(220,204,7)" rx="2" ry="2" />
<text  x="368.97" y="239.5" >__ge..</text>
</g>
<g >
<title>path_get (4 samples, 0.67%)</title><rect x="322.7" y="245" width="7.9" height="15.0" fill="rgb(210,77,15)" rx="2" ry="2" />
<text  x="325.70" y="255.5" ></text>
</g>
<g >
<title>inc_zone_page_state (2 samples, 0.33%)</title><rect x="883.2" y="165" width="3.9" height="15.0" fill="rgb(217,177,8)" rx="2" ry="2" />
<text  x="886.20" y="175.5" ></text>
</g>
<g >
<title>sched_clock_local (1 samples, 0.17%)</title><rect x="485.9" y="133" width="2.0" height="15.0" fill="rgb(227,193,9)" rx="2" ry="2" />
<text  x="488.93" y="143.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.17%)</title><rect x="318.8" y="213" width="1.9" height="15.0" fill="rgb(215,126,17)" rx="2" ry="2" />
<text  x="321.77" y="223.5" ></text>
</g>
<g >
<title>apparmor_cred_prepare (1 samples, 0.17%)</title><rect x="316.8" y="229" width="2.0" height="15.0" fill="rgb(215,9,30)" rx="2" ry="2" />
<text  x="319.80" y="239.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge (2 samples, 0.33%)</title><rect x="865.5" y="117" width="3.9" height="15.0" fill="rgb(247,104,4)" rx="2" ry="2" />
<text  x="868.50" y="127.5" ></text>
</g>
<g >
<title>page_counter_try_charge (2 samples, 0.33%)</title><rect x="352.2" y="213" width="3.9" height="15.0" fill="rgb(215,221,23)" rx="2" ry="2" />
<text  x="355.20" y="223.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.17%)</title><rect x="1131.0" y="165" width="2.0" height="15.0" fill="rgb(222,66,15)" rx="2" ry="2" />
<text  x="1134.00" y="175.5" ></text>
</g>
<g >
<title>down_write (6 samples, 1.00%)</title><rect x="723.9" y="197" width="11.8" height="15.0" fill="rgb(208,182,54)" rx="2" ry="2" />
<text  x="726.90" y="207.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (11 samples, 1.83%)</title><rect x="411.2" y="213" width="21.6" height="15.0" fill="rgb(252,51,34)" rx="2" ry="2" />
<text  x="414.20" y="223.5" >_..</text>
</g>
</g>
</svg>
